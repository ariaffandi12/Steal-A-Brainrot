-- ComboChronicle Vault | Desert War GUI
-- Version: 5.0 - Modern Clean Design
-- Features: Toggle Switches, Clean Layout, Modern UI

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local GuiService = game:GetService("GuiService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Mobile Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Variables
local espEnabled = false
local hitboxEnabled = false
local specialOpsEnabled = false
local gunModsEnabled = false
local aimbotEnabled = false
local autoLockEnabled = false
local trickshotEnabled = false
local fovRadius = 750
local currentTab = "Main"

-- ESP and Aimbot objects
local espObjects = {}
local currentTarget = nil
local aimSmoothness = 0.15
local maxAimDistance = 1000

-- Connections
local espUpdateConnection = nil
local aimUpdateConnection = nil

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ComboChronicleVault"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.IgnoreGuiInset = true
ScreenGui.DisplayOrder = 100

-- Get screen dimensions
local function getScreenInfo()
    local viewport = Camera.ViewportSize
    return {
        width = viewport.X,
        height = viewport.Y,
        scale = math.min(viewport.X / 1920, viewport.Y / 1080)
    }
end

local screenInfo = getScreenInfo()

-- Calculate responsive sizes
local function getResponsiveSizes()
    local scale = math.clamp(screenInfo.scale, 0.6, 1.2)
    return {
        mainWidth = math.floor(420 * scale),
        mainHeight = math.floor(500 * scale),
        topBarHeight = math.floor(50 * scale),
        itemHeight = math.floor(55 * scale),
        fontSize = math.floor(14 * scale),
        titleSize = math.floor(16 * scale),
        padding = math.floor(15 * scale),
        cornerRadius = math.floor(12 * scale),
        tabHeight = math.floor(45 * scale)
    }
end

local sizes = getResponsiveSizes()

-- Modern Color Palette (matching the image)
local Colors = {
    -- Main Colors
    Background = Color3.fromRGB(45, 65, 65),      -- Dark teal background
    Surface = Color3.fromRGB(55, 75, 75),         -- Slightly lighter surface
    Primary = Color3.fromRGB(64, 224, 208),       -- Cyan/turquoise accent
    Secondary = Color3.fromRGB(70, 90, 90),       -- Secondary surface
    
    -- Text Colors
    TextPrimary = Color3.fromRGB(255, 255, 255),  -- White text
    TextSecondary = Color3.fromRGB(200, 220, 220), -- Light gray text
    TextMuted = Color3.fromRGB(150, 170, 170),    -- Muted text
    
    -- Toggle Colors
    ToggleOn = Color3.fromRGB(64, 224, 208),      -- Cyan when on
    ToggleOff = Color3.fromRGB(80, 100, 100),     -- Gray when off
    ToggleKnob = Color3.fromRGB(255, 255, 255),   -- White knob
    
    -- Slider Colors
    SliderTrack = Color3.fromRGB(70, 90, 90),     -- Track color
    SliderFill = Color3.fromRGB(64, 224, 208),    -- Fill color
    SliderHandle = Color3.fromRGB(255, 255, 255), -- Handle color
    
    -- Status Colors
    Success = Color3.fromRGB(76, 175, 80),
    Warning = Color3.fromRGB(255, 193, 7),
    Error = Color3.fromRGB(244, 67, 54),
    Info = Color3.fromRGB(33, 150, 243)
}

-- Create Main Container
local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Parent = ScreenGui
MainContainer.BackgroundTransparency = 1
MainContainer.Position = UDim2.new(0, 0, 0, 0)
MainContainer.Size = UDim2.new(1, 0, 1, 0)
MainContainer.ZIndex = 1

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = MainContainer
MainFrame.BackgroundColor3 = Colors.Background
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -sizes.mainWidth/2, 0.5, -sizes.mainHeight/2)
MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
MainFrame.Active = true
MainFrame.ZIndex = 10

-- Main Frame Corner
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
MainCorner.Parent = MainFrame

-- Enhanced Dragging System
local function setupDragging(frame)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end
    
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(
                startPos.X.Scale, 
                math.clamp(startPos.X.Offset + delta.X, 0, screenInfo.width - sizes.mainWidth),
                startPos.Y.Scale, 
                math.clamp(startPos.Y.Offset + delta.Y, 0, screenInfo.height - sizes.mainHeight)
            )
            frame.Position = newPos
        end
    end
    
    local function onInputEnded(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end
    
    frame.InputBegan:Connect(onInputBegan)
    frame.InputChanged:Connect(onInputChanged)
    frame.InputEnded:Connect(onInputEnded)
end

setupDragging(MainFrame)

-- Top Bar
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundTransparency = 1
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.Size = UDim2.new(1, 0, 0, sizes.topBarHeight)
TopBar.ZIndex = 15

-- Title Label
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TopBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, sizes.padding, 0, 0)
TitleLabel.Size = UDim2.new(1, -100, 1, 0)
TitleLabel.Font = Enum.Font.GothamSemibold
TitleLabel.Text = "ComboChronicle Vault | Desert war"
TitleLabel.TextColor3 = Colors.TextPrimary
TitleLabel.TextSize = sizes.titleSize
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.TextYAlignment = Enum.TextYAlignment.Center
TitleLabel.ZIndex = 20

-- Control Icons (Search, Profile, Settings, Close)
local function createTopIcon(icon, position, callback)
    local iconButton = Instance.new("TextButton")
    iconButton.Parent = TopBar
    iconButton.BackgroundTransparency = 1
    iconButton.Position = UDim2.new(1, position, 0, 10)
    iconButton.Size = UDim2.new(0, 30, 0, 30)
    iconButton.Font = Enum.Font.GothamSemibold
    iconButton.Text = icon
    iconButton.TextColor3 = Colors.TextSecondary
    iconButton.TextSize = 16
    iconButton.ZIndex = 20
    
    if callback then
        if isMobile then
            iconButton.TouchTap:Connect(callback)
        else
            iconButton.MouseButton1Click:Connect(callback)
        end
    end
    
    return iconButton
end

local SearchIcon = createTopIcon("üîç", -130, nil)
local ProfileIcon = createTopIcon("üë§", -95, nil)
local SettingsIcon = createTopIcon("‚öôÔ∏è", -60, nil)
local CloseIcon = createTopIcon("‚úï", -25, function()
    ScreenGui:Destroy()
end)

-- Tab Container
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Parent = MainFrame
TabContainer.BackgroundTransparency = 1
TabContainer.Position = UDim2.new(0, sizes.padding, 0, sizes.topBarHeight + 10)
TabContainer.Size = UDim2.new(1, -sizes.padding*2, 0, sizes.tabHeight)
TabContainer.ZIndex = 12

-- Tab Creation Function
local function createTab(name, icon, isActive, position)
    local tab = Instance.new("TextButton")
    tab.Name = name .. "Tab"
    tab.Parent = TabContainer
    tab.BackgroundColor3 = isActive and Colors.Primary or Colors.Secondary
    tab.BorderSizePixel = 0
    tab.Position = UDim2.new(0, position, 0, 0)
    tab.Size = UDim2.new(0, 120, 0, sizes.tabHeight - 5)
    tab.Font = Enum.Font.GothamSemibold
    tab.Text = icon .. " " .. name
    tab.TextColor3 = isActive and Colors.Background or Colors.TextPrimary
    tab.TextSize = sizes.fontSize
    tab.ZIndex = 15
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 8)
    tabCorner.Parent = tab
    
    return tab
end

-- Create Tabs
local MainTab = createTab("Main", "‚öôÔ∏è", true, 0)
local AimbotTab = createTab("Aimbot+", "üéØ", false, 130)

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, sizes.padding, 0, sizes.topBarHeight + sizes.tabHeight + 20)
ContentFrame.Size = UDim2.new(1, -sizes.padding*2, 1, -(sizes.topBarHeight + sizes.tabHeight + 30))
ContentFrame.ZIndex = 12

-- Content Layout
local ContentLayout = Instance.new("UIListLayout")
ContentLayout.Parent = ContentFrame
ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentLayout.Padding = UDim.new(0, 10)
ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- Toggle Switch Creation Function
local function createToggleSwitch(parent, name, text, layoutOrder, isEnabled, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name .. "Frame"
    toggleFrame.Parent = parent
    toggleFrame.BackgroundColor3 = Colors.Surface
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight)
    toggleFrame.LayoutOrder = layoutOrder
    toggleFrame.ZIndex = 16
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggleFrame
    
    -- Toggle Label
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Name = "Label"
    toggleLabel.Parent = toggleFrame
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Position = UDim2.new(0, 15, 0, 0)
    toggleLabel.Size = UDim2.new(1, -80, 1, 0)
    toggleLabel.Font = Enum.Font.GothamSemibold
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Colors.TextPrimary
    toggleLabel.TextSize = sizes.fontSize
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.TextYAlignment = Enum.TextYAlignment.Center
    toggleLabel.ZIndex = 17
    
    -- Toggle Switch Background
    local switchBG = Instance.new("Frame")
    switchBG.Name = "SwitchBG"
    switchBG.Parent = toggleFrame
    switchBG.BackgroundColor3 = isEnabled and Colors.ToggleOn or Colors.ToggleOff
    switchBG.BorderSizePixel = 0
    switchBG.Position = UDim2.new(1, -55, 0.5, -12)
    switchBG.Size = UDim2.new(0, 45, 0, 24)
    switchBG.ZIndex = 17
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(0, 12)
    switchCorner.Parent = switchBG
    
    -- Toggle Switch Knob
    local switchKnob = Instance.new("Frame")
    switchKnob.Name = "SwitchKnob"
    switchKnob.Parent = switchBG
    switchKnob.BackgroundColor3 = Colors.ToggleKnob
    switchKnob.BorderSizePixel = 0
    switchKnob.Position = isEnabled and UDim2.new(0, 23, 0, 2) or UDim2.new(0, 2, 0, 2)
    switchKnob.Size = UDim2.new(0, 20, 0, 20)
    switchKnob.ZIndex = 18
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(0, 10)
    knobCorner.Parent = switchKnob
    
    -- Toggle Logic
    local enabled = isEnabled
    
    local function toggleSwitch()
        enabled = not enabled
        
        local bgTween = TweenService:Create(switchBG, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = enabled and Colors.ToggleOn or Colors.ToggleOff
        })
        
        local knobTween = TweenService:Create(switchKnob, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Position = enabled and UDim2.new(0, 23, 0, 2) or UDim2.new(0, 2, 0, 2)
        })
        
        bgTween:Play()
        knobTween:Play()
        
        if callback then
            callback(enabled)
        end
    end
    
    -- Click Events
    if isMobile then
        toggleFrame.TouchTap:Connect(toggleSwitch)
    else
        local toggleButton = Instance.new("TextButton")
        toggleButton.Parent = toggleFrame
        toggleButton.BackgroundTransparency = 1
        toggleButton.Size = UDim2.new(1, 0, 1, 0)
        toggleButton.Text = ""
        toggleButton.ZIndex = 19
        toggleButton.MouseButton1Click:Connect(toggleSwitch)
    end
    
    return toggleFrame, function() return enabled end
end

-- Button Creation Function (for non-toggle items)
local function createButton(parent, name, text, layoutOrder, callback)
    local buttonFrame = Instance.new("TextButton")
    buttonFrame.Name = name .. "Frame"
    buttonFrame.Parent = parent
    buttonFrame.BackgroundColor3 = Colors.Surface
    buttonFrame.BorderSizePixel = 0
    buttonFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight)
    buttonFrame.LayoutOrder = layoutOrder
    buttonFrame.ZIndex = 16
    buttonFrame.Font = Enum.Font.GothamSemibold
    buttonFrame.Text = text
    buttonFrame.TextColor3 = Colors.TextPrimary
    buttonFrame.TextSize = sizes.fontSize
    buttonFrame.TextXAlignment = Enum.TextXAlignment.Left
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = buttonFrame
    
    local buttonPadding = Instance.new("UIPadding")
    buttonPadding.Parent = buttonFrame
    buttonPadding.PaddingLeft = UDim.new(0, 15)
    
    -- Click Events
    if callback then
        if isMobile then
            buttonFrame.TouchTap:Connect(callback)
        else
            buttonFrame.MouseButton1Click:Connect(callback)
        end
    end
    
    return buttonFrame
end

-- Slider Creation Function
local function createSlider(parent, name, text, minValue, maxValue, defaultValue, layoutOrder, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = name .. "Frame"
    sliderFrame.Parent = parent
    sliderFrame.BackgroundColor3 = Colors.Surface
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight)
    sliderFrame.LayoutOrder = layoutOrder
    sliderFrame.ZIndex = 16
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 8)
    sliderCorner.Parent = sliderFrame
    
    -- Slider Label
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Name = "Label"
    sliderLabel.Parent = sliderFrame
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Position = UDim2.new(0, 15, 0, 5)
    sliderLabel.Size = UDim2.new(1, -30, 0, 20)
    sliderLabel.Font = Enum.Font.GothamSemibold
    sliderLabel.Text = text
    sliderLabel.TextColor3 = Colors.TextPrimary
    sliderLabel.TextSize = sizes.fontSize
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.ZIndex = 17
    
    -- Slider Track Container
    local trackContainer = Instance.new("Frame")
    trackContainer.Name = "TrackContainer"
    trackContainer.Parent = sliderFrame
    trackContainer.BackgroundTransparency = 1
    trackContainer.Position = UDim2.new(0, 15, 0, 30)
    trackContainer.Size = UDim2.new(1, -30, 0, 20)
    trackContainer.ZIndex = 17
    
    -- Slider Track
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Name = "Track"
    sliderTrack.Parent = trackContainer
    sliderTrack.BackgroundColor3 = Colors.SliderTrack
    sliderTrack.BorderSizePixel = 0
    sliderTrack.Position = UDim2.new(0, 0, 0.5, -3)
    sliderTrack.Size = UDim2.new(1, 0, 0, 6)
    sliderTrack.ZIndex = 18
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 3)
    trackCorner.Parent = sliderTrack
    
    -- Slider Fill
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Parent = sliderTrack
    sliderFill.BackgroundColor3 = Colors.SliderFill
    sliderFill.BorderSizePixel = 0
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.ZIndex = 19
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = sliderFill
    
    -- Value Display
    local valueDisplay = Instance.new("TextLabel")
    valueDisplay.Name = "ValueDisplay"
    valueDisplay.Parent = sliderFill
    valueDisplay.BackgroundTransparency = 1
    valueDisplay.Position = UDim2.new(0.5, 0, 0.5, 0)
    valueDisplay.Size = UDim2.new(0, 100, 0, 20)
    valueDisplay.Font = Enum.Font.GothamBold
    valueDisplay.Text = tostring(defaultValue) .. " studs"
    valueDisplay.TextColor3 = Colors.Background
    valueDisplay.TextSize = sizes.fontSize - 2
    valueDisplay.TextXAlignment = Enum.TextXAlignment.Center
    valueDisplay.TextYAlignment = Enum.TextYAlignment.Center
    valueDisplay.ZIndex = 20
    
    -- Slider Logic
    local dragging = false
    local currentValue = defaultValue
    
    local function updateSlider(input)
        local trackPosition = sliderTrack.AbsolutePosition.X
        local trackSize = sliderTrack.AbsoluteSize.X
        local mouseX = input.Position.X
        
        local relativeX = math.clamp((mouseX - trackPosition) / trackSize, 0, 1)
        currentValue = math.floor(minValue + (maxValue - minValue) * relativeX)
        
        valueDisplay.Text = tostring(currentValue) .. " studs"
        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
        
        if callback then
            callback(currentValue)
        end
        
        return currentValue
    end
    
    trackContainer.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)
    
    trackContainer.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    trackContainer.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    return sliderFrame, function() return currentValue end
end

-- Create Main Tab Content
local function createMainTabContent()
    local mainContent = Instance.new("Frame")
    mainContent.Name = "MainContent"
    mainContent.Parent = ContentFrame
    mainContent.BackgroundTransparency = 1
    mainContent.Size = UDim2.new(1, 0, 1, 0)
    mainContent.ZIndex = 13
    
    local mainLayout = Instance.new("UIListLayout")
    mainLayout.Parent = mainContent
    mainLayout.SortOrder = Enum.SortOrder.LayoutOrder
    mainLayout.Padding = UDim.new(0, 10)
    
    local espToggle, getESPState = createToggleSwitch(mainContent, "ESP", "Enable ESP", 1, false, function(enabled)
        espEnabled = enabled
        if enabled then
            updateESP()
        else
            clearAllESP()
        end
    end)
    
    local hitboxToggle, getHitboxState = createToggleSwitch(mainContent, "Hitbox", "Enable Enemy Hitbox", 2, false, function(enabled)
        hitboxEnabled = enabled
    end)
    
    local specialOpsButton = createButton(mainContent, "SpecialOps", "Special Operations Unlocked", 3, function()
        specialOpsEnabled = not specialOpsEnabled
    end)
    
    local gunModsButton = createButton(mainContent, "GunMods", "Gun Mods", 4, function()
        gunModsEnabled = not gunModsEnabled
    end)
    
    return mainContent
end

-- Create Aimbot Tab Content
local function createAimbotTabContent()
    local aimbotContent = Instance.new("Frame")
    aimbotContent.Name = "AimbotContent"
    aimbotContent.Parent = ContentFrame
    aimbotContent.BackgroundTransparency = 1
    aimbotContent.Size = UDim2.new(1, 0, 1, 0)
    aimbotContent.Visible = false
    aimbotContent.ZIndex = 13
    
    local aimbotLayout = Instance.new("UIListLayout")
    aimbotLayout.Parent = aimbotContent
    aimbotLayout.SortOrder = Enum.SortOrder.LayoutOrder
    aimbotLayout.Padding = UDim.new(0, 10)
    
    local aimbotToggle, getAimbotState = createToggleSwitch(aimbotContent, "Aimbot", "Enable Aimbot", 1, false, function(enabled)
        aimbotEnabled = enabled
        if enabled then
            startAimbot()
        else
            stopAimbot()
        end
    end)
    
    local autoLockToggle, getAutoLockState = createToggleSwitch(aimbotContent, "AutoLock", "Enable Auto-Lock", 2, false, function(enabled)
        autoLockEnabled = enabled
    end)
    
    local trickshotToggle, getTrickshotState = createToggleSwitch(aimbotContent, "Trickshot", "Enable Trickshot Mode", 3, false, function(enabled)
        trickshotEnabled = enabled
    end)
    
    local fovSlider, getFOVValue = createSlider(aimbotContent, "FOV", "FOV Radius", 250, 2000, 750, 4, function(value)
        fovRadius = value
    end)
    
    return aimbotContent
end

-- Create tab contents
local mainTabContent = createMainTabContent()
local aimbotTabContent = createAimbotTabContent()

-- Tab Switching Function
local function switchTab(tabName)
    currentTab = tabName
    
    if tabName == "Main" then
        MainTab.BackgroundColor3 = Colors.Primary
        MainTab.TextColor3 = Colors.Background
        AimbotTab.BackgroundColor3 = Colors.Secondary
        AimbotTab.TextColor3 = Colors.TextPrimary
        
        mainTabContent.Visible = true
        aimbotTabContent.Visible = false
    else
        MainTab.BackgroundColor3 = Colors.Secondary
        MainTab.TextColor3 = Colors.TextPrimary
        AimbotTab.BackgroundColor3 = Colors.Primary
        AimbotTab.TextColor3 = Colors.Background
        
        mainTabContent.Visible = false
        aimbotTabContent.Visible = true
    end
end

-- Game Functions (ESP System)
local function isEnemy(player)
    if not player or player == LocalPlayer then
        return false
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return false
    end
    
    local localTeam = LocalPlayer.Team
    local playerTeam = player.Team
    
    if not localTeam or not playerTeam or localTeam ~= playerTeam then
        return true
    end
    
    return false
end

local function getPlayerDistance(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    return (localChar.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
end

local function createESP(player)
    if not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    
    if not humanoidRootPart or not humanoid then return end
    
    -- ESP Box
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "ComboESPBox"
    espBox.Parent = humanoidRootPart
    espBox.Size = Vector3.new(4, 6, 1)
    espBox.Color3 = Colors.Primary
    espBox.Transparency = 0.3
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    
    -- Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "ComboESPHighlight"
    highlight.Parent = character
    highlight.FillColor = Colors.Primary
    highlight.OutlineColor = Colors.TextPrimary
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.2
    highlight.Adornee = character
    
    -- ESP GUI
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "ComboESPGui"
    espGui.Parent = head or humanoidRootPart
    espGui.Size = UDim2.new(0, 200, 0, 80)
    espGui.StudsOffset = Vector3.new(0, 3, 0)
    espGui.AlwaysOnTop = true
    
    -- Player Name
    local nameText = Instance.new("TextLabel")
    nameText.Parent = espGui
    nameText.BackgroundTransparency = 1
    nameText.Size = UDim2.new(1, 0, 0.5, 0)
    nameText.Font = Enum.Font.GothamBold
    nameText.TextColor3 = Colors.TextPrimary
    nameText.TextSize = 16
    nameText.TextStrokeTransparency = 0
    nameText.TextStrokeColor3 = Colors.Background
    nameText.Text = player.Name
    
    -- Distance Text
    local distanceText = Instance.new("TextLabel")
    distanceText.Parent = espGui
    distanceText.BackgroundTransparency = 1
    distanceText.Position = UDim2.new(0, 0, 0.5, 0)
    distanceText.Size = UDim2.new(1, 0, 0.5, 0)
    distanceText.Font = Enum.Font.Gotham
    distanceText.TextColor3 = Colors.Primary
    distanceText.TextSize = 14
    distanceText.TextStrokeTransparency = 0
    distanceText.TextStrokeColor3 = Colors.Background
    
    espObjects[player] = {
        box = espBox,
        highlight = highlight,
        gui = espGui,
        nameText = nameText,
        distanceText = distanceText
    }
    
    local function updateESP()
        if espObjects[player] and player.Character and humanoidRootPart.Parent then
            local distance = getPlayerDistance(player)
            distanceText.Text = math.floor(distance) .. "m"
            
            if distance < 50 then
                espBox.Color3 = Colors.Error
                highlight.FillColor = Colors.Error
            elseif distance < 150 then
                espBox.Color3 = Colors.Warning
                highlight.FillColor = Colors.Warning
            else
                espBox.Color3 = Colors.Primary
                highlight.FillColor = Colors.Primary
            end
        end
    end
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if espEnabled and espObjects[player] then
            updateESP()
        else
            connection:Disconnect()
        end
    end)
end

local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        espObjects[player] = nil
    end
end

local function clearAllESP()
    for player, _ in pairs(espObjects) do
        removeESP(player)
    end
    espObjects = {}
end

local function updateESP()
    if not espEnabled then return end
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and not espObjects[player] then
            createESP(player)
        elseif not isEnemy(player) and espObjects[player] then
            removeESP(player)
        end
    end
end

-- Aimbot System
local function getClosestEnemy()
    local closestPlayer = nil
    local closestDistance = fovRadius
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and player.Character then
            local targetPart = player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                local distance = getPlayerDistance(player)
                
                local camera = Camera
                local cameraPosition = camera.CFrame.Position
                local cameraDirection = camera.CFrame.LookVector
                local targetPosition = targetPart.Position
                local directionToTarget = (targetPosition - cameraPosition).Unit
                local angle = math.acos(math.clamp(cameraDirection:Dot(directionToTarget), -1, 1))
                
                if angle < math.rad(45) and distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local function aimAtTarget(target)
    if not target or not target.Character then
        return
    end
    
    local targetPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then
        return
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    local velocity = humanoidRootPart and humanoidRootPart.Velocity or Vector3.new(0, 0, 0)
    local distance = getPlayerDistance(target)
    local timeToTarget = distance / 1000
    
    local predictedPosition = targetPart.Position + (velocity * timeToTarget)
    
    local cameraPosition = Camera.CFrame.Position
    local direction = (predictedPosition - cameraPosition).Unit
    
    local currentCFrame = Camera.CFrame
    local targetCFrame = CFrame.lookAt(cameraPosition, predictedPosition)
    
    local newCFrame = currentCFrame:Lerp(targetCFrame, aimSmoothness)
    Camera.CFrame = newCFrame
end

local function startAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
    end
    
    aimUpdateConnection = RunService.Heartbeat:Connect(function()
        if aimbotEnabled then
            currentTarget = getClosestEnemy()
            if currentTarget then
                aimAtTarget(currentTarget)
            end
        end
    end)
end

local function stopAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
        aimUpdateConnection = nil
    end
    currentTarget = nil
end

-- Event Connections
if isMobile then
    MainTab.TouchTap:Connect(function() switchTab("Main") end)
    AimbotTab.TouchTap:Connect(function() switchTab("Aimbot+") end)
else
    MainTab.MouseButton1Click:Connect(function() switchTab("Main") end)
    AimbotTab.MouseButton1Click:Connect(function() switchTab("Aimbot+") end)
end

-- Player Events
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        wait(2)
        updateESP()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function()
    wait(3)
    
    if espEnabled then
        updateESP()
    end
end)

-- Screen resize handling
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
    screenInfo = getScreenInfo()
    sizes = getResponsiveSizes()
    
    MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
    MainFrame.Position = UDim2.new(0.5, -sizes.mainWidth/2, 0.5, -sizes.mainHeight/2)
end)

-- Cleanup
ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui.Parent then
        clearAllESP()
        stopAimbot()
        if espUpdateConnection then espUpdateConnection:Disconnect() end
        if aimUpdateConnection then aimUpdateConnection:Disconnect() end
    end
end)

-- Initialize ESP update connection
if espUpdateConnection then
    espUpdateConnection:Disconnect()
end
espUpdateConnection = RunService.Heartbeat:Connect(updateESP)

print("üéØ COMBOCHRONICLE VAULT | DESERT WAR v5.0 LOADED!")
print("=" .. string.rep("=", 60))
print("‚ú® MODERN FEATURES:")
print("   üé® Clean Modern Design")
print("   üîò Toggle Switches")
print("   üì± Responsive Layout")
print("   üéØ Tab System")
print("   üéöÔ∏è Slider Controls")
print("   üì± Mobile Support")
print("")
print("üî∞ MAIN TAB:")
print("   üëÅÔ∏è Enable ESP")
print("   üíÄ Enable Enemy Hitbox")
print("   üî∞ Special Operations Unlocked")
print("   üî´ Gun Mods")
print("")
print("üéØ AIMBOT+ TAB:")
print("   üéØ Enable Aimbot")
print("   üîí Enable Auto-Lock")
print("   üåü Enable Trickshot Mode")
print("   üì° FOV Radius Slider (250-2000 studs)")
print("")
print("üéÆ CONTROLS:")
if isMobile then
    print("   üì± Touch all toggles and sliders")
    print("   ü§è Drag GUI to move")
    print("   üëÜ Tap tabs to switch")
else
    print("   üñ±Ô∏è Click all toggles and sliders")
    print("   üñ±Ô∏è Drag GUI to move")
    print("   üñ±Ô∏è Click tabs to switch")
end
print("")
print("üé® THEME: Modern Teal/Cyan")
print("üìè SCREEN: " .. screenInfo.width .. "x" .. screenInfo.height)
print("üîß GUI SIZE: " .. sizes.mainWidth .. "x" .. sizes.mainHeight)
print("")
print("üöÄ READY FOR MODERN COMBAT!")
print("=" .. string.rep("=", 60))
