-- Dessert War Military GUI - Professional Edition
-- Version: 4.0 - Military Desert Theme
-- Features: Scrollable UI, Tabs, Military Design, Complete Features

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local GuiService = game:GetService("GuiService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Mobile Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Variables
local espEnabled = false
local hitboxEnabled = false
local specialOpsEnabled = false
local noRecoilEnabled = false
local rapidFireEnabled = false
local fastReloadEnabled = false
local infiniteAmmoEnabled = false
local aimbotEnabled = false
local autoLockEnabled = false
local trickshotEnabled = false
local fovRadius = 500
local isMinimized = false
local currentTab = "Main"

-- ESP and Aimbot objects
local espObjects = {}
local currentTarget = nil
local aimSmoothness = 0.15
local maxAimDistance = 1000

-- Connections
local espUpdateConnection = nil
local aimUpdateConnection = nil

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DessertWarMilitary"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.IgnoreGuiInset = true
ScreenGui.DisplayOrder = 100

-- Get screen dimensions
local function getScreenInfo()
    local viewport = Camera.ViewportSize
    return {
        width = viewport.X,
        height = viewport.Y,
        scale = math.min(viewport.X / 1920, viewport.Y / 1080)
    }
end

local screenInfo = getScreenInfo()

-- Calculate responsive sizes
local function getResponsiveSizes()
    local scale = math.clamp(screenInfo.scale, 0.5, 1.2)
    return {
        mainWidth = math.floor(380 * scale),
        mainHeight = math.floor(520 * scale),
        topBarHeight = math.floor(60 * scale),
        buttonHeight = math.floor(35 * scale),
        fontSize = math.floor(12 * scale),
        titleSize = math.floor(16 * scale),
        padding = math.floor(10 * scale),
        cornerRadius = math.floor(8 * scale),
        tabHeight = math.floor(40 * scale)
    }
end

local sizes = getResponsiveSizes()

-- Military Desert Color Palette
local Colors = {
    -- Primary Colors
    DesertTan = Color3.fromRGB(194, 154, 108),
    DarkBrown = Color3.fromRGB(101, 67, 33),
    MilitaryGreen = Color3.fromRGB(75, 83, 32),
    CamoOrange = Color3.fromRGB(184, 115, 51),
    
    -- Background Colors
    MainBG = Color3.fromRGB(45, 35, 25),
    SecondaryBG = Color3.fromRGB(35, 28, 20),
    DarkBG = Color3.fromRGB(25, 20, 15),
    
    -- Accent Colors
    ActiveOrange = Color3.fromRGB(255, 140, 0),
    HoverOrange = Color3.fromRGB(255, 165, 0),
    DisabledGray = Color3.fromRGB(80, 70, 60),
    
    -- Text Colors
    TextWhite = Color3.fromRGB(255, 255, 255),
    TextGray = Color3.fromRGB(200, 190, 180),
    TextDark = Color3.fromRGB(50, 40, 30),
    
    -- Status Colors
    SuccessGreen = Color3.fromRGB(76, 175, 80),
    WarningYellow = Color3.fromRGB(255, 193, 7),
    DangerRed = Color3.fromRGB(244, 67, 54),
    InfoBlue = Color3.fromRGB(33, 150, 243)
}

-- Create Main Container
local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Parent = ScreenGui
MainContainer.BackgroundTransparency = 1
MainContainer.Position = UDim2.new(0, 0, 0, 0)
MainContainer.Size = UDim2.new(1, 0, 1, 0)
MainContainer.ZIndex = 1

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = MainContainer
MainFrame.BackgroundColor3 = Colors.MainBG
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0, 50, 0, 50)
MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
MainFrame.Active = true
MainFrame.ZIndex = 10

-- Main Frame Gradient
local MainGradient = Instance.new("UIGradient")
MainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.SecondaryBG),
    ColorSequenceKeypoint.new(0.3, Colors.MainBG),
    ColorSequenceKeypoint.new(0.7, Colors.DarkBG),
    ColorSequenceKeypoint.new(1, Colors.SecondaryBG)
}
MainGradient.Rotation = 135
MainGradient.Parent = MainFrame

-- Main Frame Corner
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
MainCorner.Parent = MainFrame

-- Main Frame Shadow
local MainShadow = Instance.new("Frame")
MainShadow.Name = "MainShadow"
MainShadow.Parent = MainContainer
MainShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainShadow.BackgroundTransparency = 0.6
MainShadow.BorderSizePixel = 0
MainShadow.Position = UDim2.new(0, 55, 0, 55)
MainShadow.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
MainShadow.ZIndex = 5

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
ShadowCorner.Parent = MainShadow

-- Main Frame Border
local MainBorder = Instance.new("UIStroke")
MainBorder.Color = Colors.CamoOrange
MainBorder.Thickness = 2
MainBorder.Transparency = 0.3
MainBorder.Parent = MainFrame

-- Enhanced Dragging System
local function setupDragging(frame, shadowFrame)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    local shadowStartPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            if shadowFrame then
                shadowStartPos = shadowFrame.Position
            end
        end
    end
    
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(
                startPos.X.Scale, 
                math.clamp(startPos.X.Offset + delta.X, 0, screenInfo.width - sizes.mainWidth),
                startPos.Y.Scale, 
                math.clamp(startPos.Y.Offset + delta.Y, 0, screenInfo.height - sizes.mainHeight)
            )
            frame.Position = newPos
            
            if shadowFrame and shadowStartPos then
                shadowFrame.Position = UDim2.new(
                    shadowStartPos.X.Scale, 
                    newPos.X.Offset + 5,
                    shadowStartPos.Y.Scale, 
                    newPos.Y.Offset + 5
                )
            end
        end
    end
    
    local function onInputEnded(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end
    
    frame.InputBegan:Connect(onInputBegan)
    frame.InputChanged:Connect(onInputChanged)
    frame.InputEnded:Connect(onInputEnded)
end

setupDragging(MainFrame, MainShadow)

-- Top Bar
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundColor3 = Colors.DarkBrown
TopBar.BorderSizePixel = 0
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.Size = UDim2.new(1, 0, 0, sizes.topBarHeight)
TopBar.ZIndex = 15

-- Top Bar Gradient
local TopBarGradient = Instance.new("UIGradient")
TopBarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.CamoOrange),
    ColorSequenceKeypoint.new(0.5, Colors.DarkBrown),
    ColorSequenceKeypoint.new(1, Colors.MilitaryGreen)
}
TopBarGradient.Rotation = 90
TopBarGradient.Parent = TopBar

local TopBarCorner = Instance.new("UICorner")
TopBarCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
TopBarCorner.Parent = TopBar

-- Title Label
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TopBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, sizes.padding, 0, 5)
TitleLabel.Size = UDim2.new(1, -120, 0, 25)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "‚öîÔ∏è DESSERT WAR TACTICAL"
TitleLabel.TextColor3 = Colors.TextWhite
TitleLabel.TextSize = sizes.titleSize
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.TextStrokeTransparency = 0
TitleLabel.TextStrokeColor3 = Colors.TextDark
TitleLabel.ZIndex = 20

-- Subtitle
local SubTitle = Instance.new("TextLabel")
SubTitle.Name = "SubTitle"
SubTitle.Parent = TopBar
SubTitle.BackgroundTransparency = 1
SubTitle.Position = UDim2.new(0, sizes.padding, 0, 30)
SubTitle.Size = UDim2.new(1, -120, 0, 20)
SubTitle.Font = Enum.Font.Gotham
SubTitle.Text = "üî∞ Military Operations v4.0"
SubTitle.TextColor3 = Colors.TextGray
SubTitle.TextSize = sizes.fontSize - 1
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.TextStrokeTransparency = 0
SubTitle.TextStrokeColor3 = Colors.TextDark
SubTitle.ZIndex = 20

-- Control Buttons
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = TopBar
MinimizeButton.BackgroundColor3 = Colors.WarningYellow
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -70, 0, 10)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "‚àí"
MinimizeButton.TextColor3 = Colors.TextDark
MinimizeButton.TextSize = 18
MinimizeButton.ZIndex = 20

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 6)
MinCorner.Parent = MinimizeButton

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = TopBar
CloseButton.BackgroundColor3 = Colors.DangerRed
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -35, 0, 10)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "‚úï"
CloseButton.TextColor3 = Colors.TextWhite
CloseButton.TextSize = 14
CloseButton.ZIndex = 20

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Tab System
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Parent = MainFrame
TabContainer.BackgroundTransparency = 1
TabContainer.Position = UDim2.new(0, 0, 0, sizes.topBarHeight)
TabContainer.Size = UDim2.new(1, 0, 0, sizes.tabHeight)
TabContainer.ZIndex = 12

local TabLayout = Instance.new("UIListLayout")
TabLayout.Parent = TabContainer
TabLayout.FillDirection = Enum.FillDirection.Horizontal
TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
TabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
TabLayout.Padding = UDim.new(0, 2)

local TabPadding = Instance.new("UIPadding")
TabPadding.Parent = TabContainer
TabPadding.PaddingLeft = UDim.new(0, sizes.padding)
TabPadding.PaddingRight = UDim.new(0, sizes.padding)

-- Tab Creation Function
local function createTab(name, icon, isActive)
    local tab = Instance.new("TextButton")
    tab.Name = name .. "Tab"
    tab.Parent = TabContainer
    tab.BackgroundColor3 = isActive and Colors.ActiveOrange or Colors.DisabledGray
    tab.BorderSizePixel = 0
    tab.Size = UDim2.new(0, 120, 0, sizes.tabHeight - 10)
    tab.Font = Enum.Font.GothamBold
    tab.Text = icon .. " " .. name
    tab.TextColor3 = Colors.TextWhite
    tab.TextSize = sizes.fontSize
    tab.TextStrokeTransparency = 0
    tab.TextStrokeColor3 = Colors.TextDark
    tab.ZIndex = 15
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 6)
    tabCorner.Parent = tab
    
    local tabGradient = Instance.new("UIGradient")
    if isActive then
        tabGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Colors.ActiveOrange),
            ColorSequenceKeypoint.new(1, Colors.CamoOrange)
        }
    else
        tabGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Colors.DisabledGray),
            ColorSequenceKeypoint.new(1, Colors.SecondaryBG)
        }
    end
    tabGradient.Rotation = 90
    tabGradient.Parent = tab
    
    return tab
end

-- Create Tabs
local MainTab = createTab("Main", "üî∞", true)
local AimbotTab = createTab("Aimbot", "üéØ", false)

-- Content Frame (Scrollable)
local ContentFrame = Instance.new("ScrollingFrame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundColor3 = Colors.SecondaryBG
ContentFrame.BorderSizePixel = 0
ContentFrame.Position = UDim2.new(0, 0, 0, sizes.topBarHeight + sizes.tabHeight)
ContentFrame.Size = UDim2.new(1, 0, 1, -(sizes.topBarHeight + sizes.tabHeight + 50))
ContentFrame.ScrollBarThickness = 8
ContentFrame.ScrollBarImageColor3 = Colors.CamoOrange
ContentFrame.ScrollBarImageTransparency = 0.3
ContentFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
ContentFrame.ScrollingDirection = Enum.ScrollingDirection.Y
ContentFrame.ElasticBehavior = Enum.ElasticBehavior.WhenScrollable
ContentFrame.ZIndex = 12

-- Content Frame Gradient
local ContentGradient = Instance.new("UIGradient")
ContentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.SecondaryBG),
    ColorSequenceKeypoint.new(1, Colors.DarkBG)
}
ContentGradient.Rotation = 180
ContentGradient.Parent = ContentFrame

-- Content Layout
local ContentLayout = Instance.new("UIListLayout")
ContentLayout.Parent = ContentFrame
ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentLayout.Padding = UDim.new(0, sizes.padding)
ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

local ContentPadding = Instance.new("UIPadding")
ContentPadding.Parent = ContentFrame
ContentPadding.PaddingTop = UDim.new(0, sizes.padding)
ContentPadding.PaddingBottom = UDim.new(0, sizes.padding)
ContentPadding.PaddingLeft = UDim.new(0, sizes.padding)
ContentPadding.PaddingRight = UDim.new(0, sizes.padding + 8)

-- Section Creation Function
local function createSection(title, icon, layoutOrder)
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Parent = ContentFrame
    section.BackgroundColor3 = Colors.MainBG
    section.BorderSizePixel = 0
    section.Size = UDim2.new(1, -10, 0, 0)
    section.LayoutOrder = layoutOrder
    section.ZIndex = 13
    
    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 6)
    sectionCorner.Parent = section
    
    local sectionBorder = Instance.new("UIStroke")
    sectionBorder.Color = Colors.DesertTan
    sectionBorder.Thickness = 1
    sectionBorder.Transparency = 0.5
    sectionBorder.Parent = section
    
    local sectionGradient = Instance.new("UIGradient")
    sectionGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Colors.MainBG),
        ColorSequenceKeypoint.new(1, Colors.SecondaryBG)
    }
    sectionGradient.Rotation = 45
    sectionGradient.Parent = section
    
    -- Section Header
    local header = Instance.new("TextLabel")
    header.Name = "Header"
    header.Parent = section
    header.BackgroundTransparency = 1
    header.Position = UDim2.new(0, sizes.padding, 0, 8)
    header.Size = UDim2.new(1, -sizes.padding*2, 0, 25)
    header.Font = Enum.Font.GothamBold
    header.Text = icon .. " " .. title
    header.TextColor3 = Colors.DesertTan
    header.TextSize = sizes.fontSize + 1
    header.TextXAlignment = Enum.TextXAlignment.Left
    header.TextStrokeTransparency = 0
    header.TextStrokeColor3 = Colors.TextDark
    header.ZIndex = 15
    
    -- Section Content
    local content = Instance.new("Frame")
    content.Name = "Content"
    content.Parent = section
    content.BackgroundTransparency = 1
    content.Position = UDim2.new(0, 0, 0, 35)
    content.Size = UDim2.new(1, 0, 1, -35)
    content.ZIndex = 14
    
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Parent = content
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 6)
    contentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    local contentPadding = Instance.new("UIPadding")
    contentPadding.Parent = content
    contentPadding.PaddingTop = UDim.new(0, 5)
    contentPadding.PaddingBottom = UDim2.new(0, 10)
    contentPadding.PaddingLeft = UDim.new(0, sizes.padding)
    contentPadding.PaddingRight = UDim.new(0, sizes.padding)
    
    return section, content
end

-- Button Creation Function
local function createButton(parent, name, text, color, layoutOrder, isToggle)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = parent
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 0, sizes.buttonHeight)
    button.Font = Enum.Font.GothamSemibold
    button.Text = text
    button.TextColor3 = Colors.TextWhite
    button.TextSize = sizes.fontSize
    button.TextStrokeTransparency = 0
    button.TextStrokeColor3 = Colors.TextDark
    button.LayoutOrder = layoutOrder
    button.ZIndex = 16
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.new(color.R * 1.2, color.G * 1.2, color.B * 1.2)),
        ColorSequenceKeypoint.new(0.5, color),
        ColorSequenceKeypoint.new(1, Color3.new(color.R * 0.8, color.G * 0.8, color.B * 0.8))
    }
    buttonGradient.Rotation = 90
    buttonGradient.Parent = button
    
    local buttonBorder = Instance.new("UIStroke")
    buttonBorder.Color = Colors.DesertTan
    buttonBorder.Thickness = 1
    buttonBorder.Transparency = 0.7
    buttonBorder.Parent = button
    
    -- Hover Animation
    local function onHover()
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.new(color.R * 1.3, color.G * 1.3, color.B * 1.3),
            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 2)
        })
        hoverTween:Play()
        
        local borderTween = TweenService:Create(buttonBorder, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Transparency = 0.3
        })
        borderTween:Play()
    end
    
    local function onLeave()
        local leaveTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = color,
            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 2)
        })
        leaveTween:Play()
        
        local borderTween = TweenService:Create(buttonBorder, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Transparency = 0.7
        })
        borderTween:Play()
    end
    
    if not isMobile then
        button.MouseEnter:Connect(onHover)
        button.MouseLeave:Connect(onLeave)
    end
    
    return button
end

-- Slider Creation Function
local function createSlider(parent, name, text, minValue, maxValue, defaultValue, layoutOrder)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = name .. "Frame"
    sliderFrame.Parent = parent
    sliderFrame.BackgroundColor3 = Colors.SecondaryBG
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.LayoutOrder = layoutOrder
    sliderFrame.ZIndex = 16
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 6)
    sliderCorner.Parent = sliderFrame
    
    local sliderBorder = Instance.new("UIStroke")
    sliderBorder.Color = Colors.DesertTan
    sliderBorder.Thickness = 1
    sliderBorder.Transparency = 0.5
    sliderBorder.Parent = sliderFrame
    
    -- Slider Label
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Name = "Label"
    sliderLabel.Parent = sliderFrame
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Position = UDim2.new(0, 10, 0, 5)
    sliderLabel.Size = UDim2.new(1, -20, 0, 20)
    sliderLabel.Font = Enum.Font.GothamSemibold
    sliderLabel.Text = text
    sliderLabel.TextColor3 = Colors.TextGray
    sliderLabel.TextSize = sizes.fontSize
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.TextStrokeTransparency = 0
    sliderLabel.TextStrokeColor3 = Colors.TextDark
    sliderLabel.ZIndex = 17
    
    -- Slider Value Label
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Name = "ValueLabel"
    valueLabel.Parent = sliderFrame
    valueLabel.BackgroundTransparency = 1
    valueLabel.Position = UDim2.new(1, -80, 0, 5)
    valueLabel.Size = UDim2.new(0, 70, 0, 20)
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.Text = tostring(defaultValue)
    valueLabel.TextColor3 = Colors.ActiveOrange
    valueLabel.TextSize = sizes.fontSize
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.TextStrokeTransparency = 0
    valueLabel.TextStrokeColor3 = Colors.TextDark
    valueLabel.ZIndex = 17
    
    -- Slider Track
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Name = "Track"
    sliderTrack.Parent = sliderFrame
    sliderTrack.BackgroundColor3 = Colors.DarkBG
    sliderTrack.BorderSizePixel = 0
    sliderTrack.Position = UDim2.new(0, 10, 0, 30)
    sliderTrack.Size = UDim2.new(1, -20, 0, 8)
    sliderTrack.ZIndex = 17
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 4)
    trackCorner.Parent = sliderTrack
    
    -- Slider Fill
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Parent = sliderTrack
    sliderFill.BackgroundColor3 = Colors.ActiveOrange
    sliderFill.BorderSizePixel = 0
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.ZIndex = 18
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 4)
    fillCorner.Parent = sliderFill
    
    local fillGradient = Instance.new("UIGradient")
    fillGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Colors.ActiveOrange),
        ColorSequenceKeypoint.new(1, Colors.CamoOrange)
    }
    fillGradient.Rotation = 90
    fillGradient.Parent = sliderFill
    
    -- Slider Handle
    local sliderHandle = Instance.new("Frame")
    sliderHandle.Name = "Handle"
    sliderHandle.Parent = sliderTrack
    sliderHandle.BackgroundColor3 = Colors.DesertTan
    sliderHandle.BorderSizePixel = 0
    sliderHandle.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), -6, 0, -4)
    sliderHandle.Size = UDim2.new(0, 12, 0, 16)
    sliderHandle.ZIndex = 19
    
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(0, 6)
    handleCorner.Parent = sliderHandle
    
    local handleBorder = Instance.new("UIStroke")
    handleBorder.Color = Colors.TextWhite
    handleBorder.Thickness = 2
    handleBorder.Parent = sliderHandle
    
    -- Slider Logic
    local dragging = false
    local currentValue = defaultValue
    
    local function updateSlider(input)
        local trackPosition = sliderTrack.AbsolutePosition.X
        local trackSize = sliderTrack.AbsoluteSize.X
        local mouseX = input.Position.X
        
        local relativeX = math.clamp((mouseX - trackPosition) / trackSize, 0, 1)
        currentValue = math.floor(minValue + (maxValue - minValue) * relativeX)
        
        valueLabel.Text = tostring(currentValue)
        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
        sliderHandle.Position = UDim2.new(relativeX, -6, 0, -4)
        
        return currentValue
    end
    
    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)
    
    sliderTrack.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    sliderTrack.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    return sliderFrame, function() return currentValue end
end

-- Status Info Frame
local StatusFrame = Instance.new("Frame")
StatusFrame.Name = "StatusFrame"
StatusFrame.Parent = MainFrame
StatusFrame.BackgroundColor3 = Colors.DarkBG
StatusFrame.BorderSizePixel = 0
StatusFrame.Position = UDim2.new(0, 0, 1, -45)
StatusFrame.Size = UDim2.new(1, 0, 0, 45)
StatusFrame.ZIndex = 12

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
StatusCorner.Parent = StatusFrame

local StatusGradient = Instance.new("UIGradient")
StatusGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.DarkBG),
    ColorSequenceKeypoint.new(1, Colors.SecondaryBG)
}
StatusGradient.Rotation = 90
StatusGradient.Parent = StatusFrame

local StatusBorder = Instance.new("UIStroke")
StatusBorder.Color = Colors.CamoOrange
StatusBorder.Thickness = 1
StatusBorder.Transparency = 0.5
StatusBorder.Parent = StatusFrame

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = StatusFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, sizes.padding, 0, 5)
StatusLabel.Size = UDim2.new(1, -sizes.padding*2, 0, 35)
StatusLabel.Font = Enum.Font.GothamSemibold
StatusLabel.Text = "üíÄ Tactical Systems Ready"
StatusLabel.TextColor3 = Colors.SuccessGreen
StatusLabel.TextSize = sizes.fontSize
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.TextStrokeTransparency = 0
StatusLabel.TextStrokeColor3 = Colors.TextDark
StatusLabel.ZIndex = 15

-- Create Main Tab Content
local function createMainTabContent()
    -- ESP Section
    local espSection, espContent = createSection("ESP Operations", "üëÅÔ∏è", 1)
    
    local espButton = createButton(espContent, "ESPButton", "üî∞ Enable ESP: OFF", Colors.DangerRed, 1, true)
    local hitboxButton = createButton(espContent, "HitboxButton", "üíÄ Enemy Hitbox: OFF", Colors.DangerRed, 2, true)
    
    -- Special Operations Section
    local opsSection, opsContent = createSection("Special Operations", "‚öîÔ∏è", 2)
    
    local specialOpsButton = createButton(opsContent, "SpecialOpsButton", "üî∞ Unlock Special Ops: OFF", Colors.DangerRed, 1, true)
    
    -- Gun Modifications Section
    local gunSection, gunContent = createSection("Weapon Modifications", "üî´", 3)
    
    local noRecoilButton = createButton(gunContent, "NoRecoilButton", "üéØ No Recoil: OFF", Colors.DangerRed, 1, true)
    local rapidFireButton = createButton(gunContent, "RapidFireButton", "‚ö° Rapid Fire: OFF", Colors.DangerRed, 2, true)
    local fastReloadButton = createButton(gunContent, "FastReloadButton", "üîÑ Fast Reload: OFF", Colors.DangerRed, 3, true)
    local infiniteAmmoButton = createButton(gunContent, "InfiniteAmmoButton", "‚ôæÔ∏è Infinite Ammo: OFF", Colors.DangerRed, 4, true)
    
    -- Update section sizes
    espSection.Size = UDim2.new(1, -10, 0, 100)
    opsSection.Size = UDim2.new(1, -10, 0, 80)
    gunSection.Size = UDim2.new(1, -10, 0, 200)
    
    return {
        espButton = espButton,
        hitboxButton = hitboxButton,
        specialOpsButton = specialOpsButton,
        noRecoilButton = noRecoilButton,
        rapidFireButton = rapidFireButton,
        fastReloadButton = fastReloadButton,
        infiniteAmmoButton = infiniteAmmoButton
    }
end

-- Create Aimbot Tab Content
local function createAimbotTabContent()
    -- Aimbot Section
    local aimbotSection, aimbotContent = createSection("Targeting Systems", "üéØ", 1)
    
    local aimbotButton = createButton(aimbotContent, "AimbotButton", "üéØ Enable Aimbot: OFF", Colors.DangerRed, 1, true)
    local autoLockButton = createButton(aimbotContent, "AutoLockButton", "üîí Auto-Lock: OFF", Colors.DangerRed, 2, true)
    local trickshotButton = createButton(aimbotContent, "TrickshotButton", "üåü Trickshot Mode: OFF", Colors.DangerRed, 3, true)
    
    -- FOV Section
    local fovSection, fovContent = createSection("Field of View", "üì°", 2)
    
    local fovSlider, getFOVValue = createSlider(fovContent, "FOVSlider", "üéØ FOV Radius (studs)", 250, 2000, 500, 1)
    
    -- Update section sizes
    aimbotSection.Size = UDim2.new(1, -10, 0, 150)
    fovSection.Size = UDim2.new(1, -10, 0, 80)
    
    return {
        aimbotButton = aimbotButton,
        autoLockButton = autoLockButton,
        trickshotButton = trickshotButton,
        getFOVValue = getFOVValue
    }
end

-- Create tab contents
local mainTabButtons = createMainTabContent()
local aimbotTabButtons = createAimbotTabContent()

-- Initially hide aimbot content
for _, child in pairs(ContentFrame:GetChildren()) do
    if child:IsA("Frame") and child.LayoutOrder > 0 then
        if child.LayoutOrder > 3 then
            child.Visible = false
        end
    end
end

-- Minimized Frame
local MinimizedFrame = Instance.new("Frame")
MinimizedFrame.Name = "MinimizedFrame"
MinimizedFrame.Parent = MainContainer
MinimizedFrame.BackgroundColor3 = Colors.MainBG
MinimizedFrame.BorderSizePixel = 0
MinimizedFrame.Position = UDim2.new(0, 50, 0, 50)
MinimizedFrame.Size = UDim2.new(0, 200, 0, 50)
MinimizedFrame.Visible = false
MinimizedFrame.Active = true
MinimizedFrame.ZIndex = 25

local MinFrameCorner = Instance.new("UICorner")
MinFrameCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
MinFrameCorner.Parent = MinimizedFrame

local MinFrameGradient = Instance.new("UIGradient")
MinFrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.CamoOrange),
    ColorSequenceKeypoint.new(1, Colors.DarkBrown)
}
MinFrameGradient.Rotation = 90
MinFrameGradient.Parent = MinimizedFrame

local MinFrameBorder = Instance.new("UIStroke")
MinFrameBorder.Color = Colors.DesertTan
MinFrameBorder.Thickness = 2
MinFrameBorder.Parent = MinimizedFrame

local RestoreButton = Instance.new("TextButton")
RestoreButton.Name = "RestoreButton"
RestoreButton.Parent = MinimizedFrame
RestoreButton.BackgroundTransparency = 1
RestoreButton.Size = UDim2.new(1, 0, 1, 0)
RestoreButton.Font = Enum.Font.GothamBold
RestoreButton.Text = "‚öîÔ∏è Dessert War Tactical"
RestoreButton.TextColor3 = Colors.TextWhite
RestoreButton.TextSize = sizes.fontSize
RestoreButton.TextStrokeTransparency = 0
RestoreButton.TextStrokeColor3 = Colors.TextDark
RestoreButton.ZIndex = 26

setupDragging(MinimizedFrame)

-- Animation Functions
local function smoothMinimize()
    isMinimized = true
    
    local minimizeTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    
    local shadowTween = TweenService:Create(MainShadow, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    
    minimizeTween:Play()
    shadowTween:Play()
    
    minimizeTween.Completed:Connect(function()
        MainFrame.Visible = false
        MainShadow.Visible = false
        MinimizedFrame.Visible = true
        
        MinimizedFrame.Size = UDim2.new(0, 0, 0, 0)
        local restoreTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.4, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 200, 0, 50)
        })
        restoreTween:Play()
    end)
end

local function smoothRestore()
    isMinimized = false
    
    local hideTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 0, 0, 0)
    })
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MinimizedFrame.Visible = false
        MainFrame.Visible = true
        MainShadow.Visible = true
        
        MainFrame.Size = UDim2.new(0, 0, 0, 0)
        MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        MainShadow.Size = UDim2.new(0, 0, 0, 0)
        MainShadow.BackgroundTransparency = 1
        
        local restoreTween = TweenService:Create(MainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight),
            Position = UDim2.new(0, 50, 0, 50)
        })
        
        local shadowRestoreTween = TweenService:Create(MainShadow, TweenInfo.new(0.6, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight),
            BackgroundTransparency = 0.6
        })
        
        restoreTween:Play()
        shadowRestoreTween:Play()
    end)
end

-- Tab Switching Function
local function switchTab(tabName)
    currentTab = tabName
    
    -- Update tab appearances
    if tabName == "Main" then
        MainTab.BackgroundColor3 = Colors.ActiveOrange
        AimbotTab.BackgroundColor3 = Colors.DisabledGray
        
        -- Show main content, hide aimbot content
        for _, child in pairs(ContentFrame:GetChildren()) do
            if child:IsA("Frame") and child.LayoutOrder > 0 then
                if child.LayoutOrder <= 3 then
                    child.Visible = true
                else
                    child.Visible = false
                end
            end
        end
    else
        MainTab.BackgroundColor3 = Colors.DisabledGray
        AimbotTab.BackgroundColor3 = Colors.ActiveOrange
        
        -- Hide main content, show aimbot content
        for _, child in pairs(ContentFrame:GetChildren()) do
            if child:IsA("Frame") and child.LayoutOrder > 0 then
                if child.LayoutOrder <= 3 then
                    child.Visible = false
                else
                    child.Visible = true
                end
            end
        end
    end
end

-- Helper Functions
local function updateStatus(text, color)
    StatusLabel.Text = text
    StatusLabel.TextColor3 = color or Colors.SuccessGreen
    
    local statusTween = TweenService:Create(StatusLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        TextSize = sizes.fontSize + 2
    })
    statusTween:Play()
    
    statusTween.Completed:Connect(function()
        local backTween = TweenService:Create(StatusLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            TextSize = sizes.fontSize
        })
        backTween:Play()
    end)
end

local function toggleButton(button, isEnabled, onText, offText)
    if isEnabled then
        button.Text = onText
        button.BackgroundColor3 = Colors.SuccessGreen
    else
        button.Text = offText
        button.BackgroundColor3 = Colors.DangerRed
    end
    
    local toggleTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 3)
    })
    toggleTween:Play()
    
    toggleTween.Completed:Connect(function()
        local backTween = TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 3)
        })
        backTween:Play()
    end)
end

-- Game Functions (ESP System)
local function isEnemy(player)
    if not player or player == LocalPlayer then
        return false
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return false
    end
    
    local localTeam = LocalPlayer.Team
    local playerTeam = player.Team
    
    if not localTeam or not playerTeam or localTeam ~= playerTeam then
        return true
    end
    
    return false
end

local function getPlayerDistance(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    return (localChar.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
end

local function createESP(player)
    if not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    
    if not humanoidRootPart or not humanoid then return end
    
    -- ESP Box
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "TacticalESPBox"
    espBox.Parent = humanoidRootPart
    espBox.Size = Vector3.new(4, 6, 1)
    espBox.Color3 = Colors.DangerRed
    espBox.Transparency = 0.3
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    
    -- Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "TacticalESPHighlight"
    highlight.Parent = character
    highlight.FillColor = Colors.DangerRed
    highlight.OutlineColor = Colors.ActiveOrange
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.2
    highlight.Adornee = character
    
    -- ESP GUI
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "TacticalESPGui"
    espGui.Parent = head or humanoidRootPart
    espGui.Size = UDim2.new(0, 200, 0, 80)
    espGui.StudsOffset = Vector3.new(0, 3, 0)
    espGui.AlwaysOnTop = true
    
    -- Player Name
    local nameText = Instance.new("TextLabel")
    nameText.Parent = espGui
    nameText.BackgroundTransparency = 1
    nameText.Size = UDim2.new(1, 0, 0.5, 0)
    nameText.Font = Enum.Font.GothamBold
    nameText.TextColor3 = Colors.TextWhite
    nameText.TextSize = 16
    nameText.TextStrokeTransparency = 0
    nameText.TextStrokeColor3 = Colors.TextDark
    nameText.Text = "üíÄ " .. player.Name
    
    -- Distance Text
    local distanceText = Instance.new("TextLabel")
    distanceText.Parent = espGui
    distanceText.BackgroundTransparency = 1
    distanceText.Position = UDim2.new(0, 0, 0.5, 0)
    distanceText.Size = UDim2.new(1, 0, 0.5, 0)
    distanceText.Font = Enum.Font.Gotham
    distanceText.TextColor3 = Colors.ActiveOrange
    distanceText.TextSize = 14
    distanceText.TextStrokeTransparency = 0
    distanceText.TextStrokeColor3 = Colors.TextDark
    
    espObjects[player] = {
        box = espBox,
        highlight = highlight,
        gui = espGui,
        nameText = nameText,
        distanceText = distanceText
    }
    
    local function updateESP()
        if espObjects[player] and player.Character and humanoidRootPart.Parent then
            local distance = getPlayerDistance(player)
            distanceText.Text = "üì° " .. math.floor(distance) .. "m"
            
            if distance < 50 then
                espBox.Color3 = Colors.DangerRed
                highlight.FillColor = Colors.DangerRed
            elseif distance < 150 then
                espBox.Color3 = Colors.WarningYellow
                highlight.FillColor = Colors.WarningYellow
            else
                espBox.Color3 = Colors.InfoBlue
                highlight.FillColor = Colors.InfoBlue
            end
        end
    end
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if espEnabled and espObjects[player] then
            updateESP()
        else
            connection:Disconnect()
        end
    end)
end

local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        espObjects[player] = nil
    end
end

local function clearAllESP()
    for player, _ in pairs(espObjects) do
        removeESP(player)
    end
    espObjects = {}
end

local function updateESP()
    if not espEnabled then return end
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and not espObjects[player] then
            createESP(player)
        elseif not isEnemy(player) and espObjects[player] then
            removeESP(player)
        end
    end
end

-- Aimbot System
local function getClosestEnemy()
    local closestPlayer = nil
    local closestDistance = fovRadius
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and player.Character then
            local targetPart = player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                local distance = getPlayerDistance(player)
                
                local camera = Camera
                local cameraPosition = camera.CFrame.Position
                local cameraDirection = camera.CFrame.LookVector
                local targetPosition = targetPart.Position
                local directionToTarget = (targetPosition - cameraPosition).Unit
                local angle = math.acos(math.clamp(cameraDirection:Dot(directionToTarget), -1, 1))
                
                if angle < math.rad(45) and distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local function aimAtTarget(target)
    if not target or not target.Character then
        return
    end
    
    local targetPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then
        return
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    local velocity = humanoidRootPart and humanoidRootPart.Velocity or Vector3.new(0, 0, 0)
    local distance = getPlayerDistance(target)
    local timeToTarget = distance / 1000
    
    local predictedPosition = targetPart.Position + (velocity * timeToTarget)
    
    local cameraPosition = Camera.CFrame.Position
    local direction = (predictedPosition - cameraPosition).Unit
    
    local currentCFrame = Camera.CFrame
    local targetCFrame = CFrame.lookAt(cameraPosition, predictedPosition)
    
    local newCFrame = currentCFrame:Lerp(targetCFrame, aimSmoothness)
    Camera.CFrame = newCFrame
end

local function startAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
    end
    
    aimUpdateConnection = RunService.Heartbeat:Connect(function()
        if aimbotEnabled then
            currentTarget = getClosestEnemy()
            if currentTarget then
                aimAtTarget(currentTarget)
            end
        end
    end)
end

local function stopAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
        aimUpdateConnection = nil
    end
    currentTarget = nil
end

-- Button Setup Function
local function setupButton(button, callback)
    if isMobile then
        button.TouchTap:Connect(callback)
    else
        button.MouseButton1Click:Connect(callback)
    end
end

-- Event Connections
setupButton(MinimizeButton, smoothMinimize)
setupButton(RestoreButton, smoothRestore)

setupButton(CloseButton, function()
    local closeTween = TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    closeTween:Play()
    
    closeTween.Completed:Connect(function()
        clearAllESP()
        stopAimbot()
        ScreenGui:Destroy()
    end)
end)

-- Tab Events
setupButton(MainTab, function()
    switchTab("Main")
end)

setupButton(AimbotTab, function()
    switchTab("Aimbot")
end)

-- Main Tab Button Events
setupButton(mainTabButtons.espButton, function()
    espEnabled = not espEnabled
    toggleButton(mainTabButtons.espButton, espEnabled, "üî∞ Enable ESP: ON", "üî∞ Enable ESP: OFF")
    
    if espEnabled then
        updateStatus("üëÅÔ∏è ESP Operations Active", Colors.SuccessGreen)
        if espUpdateConnection then
            espUpdateConnection:Disconnect()
        end
        espUpdateConnection = RunService.Heartbeat:Connect(updateESP)
        updateESP()
    else
        updateStatus("üëÅÔ∏è ESP Operations Disabled", Colors.WarningYellow)
        if espUpdateConnection then
            espUpdateConnection:Disconnect()
            espUpdateConnection = nil
        end
        clearAllESP()
    end
end)

setupButton(mainTabButtons.hitboxButton, function()
    hitboxEnabled = not hitboxEnabled
    toggleButton(mainTabButtons.hitboxButton, hitboxEnabled, "üíÄ Enemy Hitbox: ON", "üíÄ Enemy Hitbox: OFF")
    
    if hitboxEnabled then
        updateStatus("üíÄ Enemy Hitbox Expanded", Colors.SuccessGreen)
    else
        updateStatus("üíÄ Enemy Hitbox Normal", Colors.WarningYellow)
    end
end)

setupButton(mainTabButtons.specialOpsButton, function()
    specialOpsEnabled = not specialOpsEnabled
    toggleButton(mainTabButtons.specialOpsButton, specialOpsEnabled, "üî∞ Unlock Special Ops: ON", "üî∞ Unlock Special Ops: OFF")
    
    if specialOpsEnabled then
        updateStatus("üî∞ Special Operations Unlocked", Colors.SuccessGreen)
    else
        updateStatus("üî∞ Special Operations Locked", Colors.WarningYellow)
    end
end)

setupButton(mainTabButtons.noRecoilButton, function()
    noRecoilEnabled = not noRecoilEnabled
    toggleButton(mainTabButtons.noRecoilButton, noRecoilEnabled, "üéØ No Recoil: ON", "üéØ No Recoil: OFF")
    
    if noRecoilEnabled then
        updateStatus("üéØ Weapon Stabilized", Colors.SuccessGreen)
    else
        updateStatus("üéØ Weapon Recoil Normal", Colors.WarningYellow)
    end
end)

setupButton(mainTabButtons.rapidFireButton, function()
    rapidFireEnabled = not rapidFireEnabled
    toggleButton(mainTabButtons.rapidFireButton, rapidFireEnabled, "‚ö° Rapid Fire: ON", "‚ö° Rapid Fire: OFF")
    
    if rapidFireEnabled then
        updateStatus("‚ö° Rapid Fire Engaged", Colors.SuccessGreen)
    else
        updateStatus("‚ö° Fire Rate Normal", Colors.WarningYellow)
    end
end)

setupButton(mainTabButtons.fastReloadButton, function()
    fastReloadEnabled = not fastReloadEnabled
    toggleButton(mainTabButtons.fastReloadButton, fastReloadEnabled, "üîÑ Fast Reload: ON", "üîÑ Fast Reload: OFF")
    
    if fastReloadEnabled then
        updateStatus("üîÑ Fast Reload Active", Colors.SuccessGreen)
    else
        updateStatus("üîÑ Reload Speed Normal", Colors.WarningYellow)
    end
end)

setupButton(mainTabButtons.infiniteAmmoButton, function()
    infiniteAmmoEnabled = not infiniteAmmoEnabled
    toggleButton(mainTabButtons.infiniteAmmoButton, infiniteAmmoEnabled, "‚ôæÔ∏è Infinite Ammo: ON", "‚ôæÔ∏è Infinite Ammo: OFF")
    
    if infiniteAmmoEnabled then
        updateStatus("‚ôæÔ∏è Unlimited Ammunition", Colors.SuccessGreen)
    else
        updateStatus("‚ôæÔ∏è Ammo Limited", Colors.WarningYellow)
    end
end)

-- Aimbot Tab Button Events
setupButton(aimbotTabButtons.aimbotButton, function()
    aimbotEnabled = not aimbotEnabled
    toggleButton(aimbotTabButtons.aimbotButton, aimbotEnabled, "üéØ Enable Aimbot: ON", "üéØ Enable Aimbot: OFF")
    
    if aimbotEnabled then
        updateStatus("üéØ Targeting System Online", Colors.SuccessGreen)
        startAimbot()
    else
        updateStatus("üéØ Targeting System Offline", Colors.WarningYellow)
        stopAimbot()
    end
end)

setupButton(aimbotTabButtons.autoLockButton, function()
    autoLockEnabled = not autoLockEnabled
    toggleButton(aimbotTabButtons.autoLockButton, autoLockEnabled, "üîí Auto-Lock: ON", "üîí Auto-Lock: OFF")
    
    if autoLockEnabled then
        updateStatus("üîí Auto-Lock Engaged", Colors.SuccessGreen)
    else
        updateStatus("üîí Auto-Lock Disabled", Colors.WarningYellow)
    end
end)

setupButton(aimbotTabButtons.trickshotButton, function()
    trickshotEnabled = not trickshotEnabled
    toggleButton(aimbotTabButtons.trickshotButton, trickshotEnabled, "üåü Trickshot Mode: ON", "üåü Trickshot Mode: OFF")
    
    if trickshotEnabled then
        updateStatus("üåü Trickshot Mode Active", Colors.SuccessGreen)
    else
        updateStatus("üåü Trickshot Mode Disabled", Colors.WarningYellow)
    end
end)

-- FOV Slider Update
spawn(function()
    while true do
        wait(0.1)
        local newFOV = aimbotTabButtons.getFOVValue()
        if newFOV ~= fovRadius then
            fovRadius = newFOV
            updateStatus("üì° FOV Radius: " .. fovRadius .. " studs", Colors.InfoBlue)
        end
    end
end)

-- Player Events
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        wait(2)
        updateESP()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function()
    wait(3)
    
    if espEnabled then
        updateESP()
    end
end)

-- Screen resize handling
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
    screenInfo = getScreenInfo()
    sizes = getResponsiveSizes()
    
    -- Update main frame size
    if not isMinimized then
        MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
        MainShadow.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
    end
end)

-- Cleanup
ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui.Parent then
        clearAllESP()
        stopAimbot()
        if espUpdateConnection then espUpdateConnection:Disconnect() end
        if aimUpdateConnection then aimUpdateConnection:Disconnect() end
    end
end)

-- Initialize
spawn(function()
    wait(2)
    updateStatus("‚öîÔ∏è Tactical Systems Initialized", Colors.SuccessGreen)
    wait(3)
    updateStatus("üíÄ Ready for Combat Operations", Colors.SuccessGreen)
end)

print("‚öîÔ∏è DESSERT WAR MILITARY GUI v4.0 LOADED!")
print("=" .. string.rep("=", 60))
print("üéñÔ∏è MILITARY FEATURES:")
print("   üî∞ Professional Military Design")
print("   üì± Responsive Layout System")
print("   üéØ Advanced Tab System")
print("   üìú Scrollable Content")
print("   üé® Military Desert Theme")
print("   ‚ö° Smooth Animations")
print("")
print("üî∞ MAIN TAB FEATURES:")
print("   üëÅÔ∏è ESP Operations")
print("   üíÄ Enemy Hitbox Expansion")
print("   üî∞ Special Operations Unlock")
print("   üî´ Weapon Modifications:")
print("      üéØ No Recoil")
print("      ‚ö° Rapid Fire")
print("      üîÑ Fast Reload")
print("      ‚ôæÔ∏è Infinite Ammo")
print("")
print("üéØ AIMBOT TAB FEATURES:")
print("   üéØ Advanced Targeting System")
print("   üîí Auto-Lock Technology")
print("   üåü Trickshot Mode")
print("   üì° Adjustable FOV Radius (250-2000 studs)")
print("")
print("üéÆ CONTROLS:")
if isMobile then
    print("   üì± Touch all buttons and sliders")
    print("   ü§è Drag GUI to move")
    print("   üëÜ Tap tabs to switch")
else
    print("   üñ±Ô∏è Click all buttons and sliders")
    print("   üñ±Ô∏è Drag GUI to move")
    print("   üñ±Ô∏è Click tabs to switch")
end
print("")
print("üé® THEME: Military Desert Camouflage")
print("üìè SCREEN: " .. screenInfo.width .. "x" .. screenInfo.height)
print("üîß GUI SIZE: " .. sizes.mainWidth .. "x" .. sizes.mainHeight)
print("")
print("üöÄ READY FOR TACTICAL OPERATIONS!")
print("=" .. string.rep("=", 60))
