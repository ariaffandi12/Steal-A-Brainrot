-- Desert War - Complete Script with Bypass System
-- Version: 7.0 - Full Features + Vehicle & Clothing Bypass
-- Features: ESP, Aimbot, Gun Mods, Special Ops, Vehicle Bypass, Clothing Bypass

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local GuiService = game:GetService("GuiService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local MarketplaceService = game:GetService("MarketplaceService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Mobile Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Core Variables
local espEnabled = false
local hitboxEnabled = false
local specialOpsEnabled = false
local gunModsEnabled = false
local aimbotEnabled = false
local autoLockEnabled = false
local trickshotEnabled = false
local fovRadius = 500
local currentTab = "Main"
local isMinimized = false

-- Advanced Variables
local originalWalkSpeed = 16
local originalJumpPower = 50
local originalHitboxSizes = {}
local espObjects = {}
local currentTarget = nil
local aimSmoothness = 0.15
local maxAimDistance = 2000
local bypassedVehicles = {}
local bypassedClothing = {}

-- Bypass Variables
local vehicleBypassEnabled = false
local clothingBypassEnabled = false
local unlimitedFuel = false
local vehicleSpeedBoost = false
local noVehicleDamage = false

-- Connections
local espUpdateConnection = nil
local aimUpdateConnection = nil
local hitboxConnection = nil
local gunModConnection = nil
local specialOpsConnection = nil
local vehicleBypassConnection = nil
local clothingBypassConnection = nil

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DesertWarBypass"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.IgnoreGuiInset = true
ScreenGui.DisplayOrder = 100

-- Screen Info
local function getScreenInfo()
    local viewport = Camera.ViewportSize
    return {
        width = viewport.X,
        height = viewport.Y,
        scale = math.min(viewport.X / 1920, viewport.Y / 1080)
    }
end

local screenInfo = getScreenInfo()

-- Responsive Sizes
local function getResponsiveSizes()
    local scale = math.clamp(screenInfo.scale, 0.6, 1.2)
    return {
        mainWidth = math.floor(450 * scale),
        mainHeight = math.floor(600 * scale),
        topBarHeight = math.floor(55 * scale),
        itemHeight = math.floor(60 * scale),
        fontSize = math.floor(14 * scale),
        titleSize = math.floor(16 * scale),
        padding = math.floor(15 * scale),
        cornerRadius = math.floor(12 * scale),
        tabHeight = math.floor(45 * scale)
    }
end

local sizes = getResponsiveSizes()

-- Enhanced Color Palette
local Colors = {
    Background = Color3.fromRGB(25, 35, 45),
    Surface = Color3.fromRGB(35, 45, 55),
    Primary = Color3.fromRGB(255, 165, 0),
    Secondary = Color3.fromRGB(45, 55, 65),
    TextPrimary = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(200, 220, 240),
    TextMuted = Color3.fromRGB(150, 170, 190),
    ToggleOn = Color3.fromRGB(255, 165, 0),
    ToggleOff = Color3.fromRGB(60, 70, 80),
    ToggleKnob = Color3.fromRGB(255, 255, 255),
    SliderTrack = Color3.fromRGB(60, 70, 80),
    SliderFill = Color3.fromRGB(255, 165, 0),
    SliderHandle = Color3.fromRGB(255, 255, 255),
    Success = Color3.fromRGB(76, 175, 80),
    Warning = Color3.fromRGB(255, 193, 7),
    Error = Color3.fromRGB(244, 67, 54),
    Info = Color3.fromRGB(33, 150, 243),
    Bypass = Color3.fromRGB(138, 43, 226)
}

-- Create Main Container
local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Parent = ScreenGui
MainContainer.BackgroundTransparency = 1
MainContainer.Position = UDim2.new(0, 0, 0, 0)
MainContainer.Size = UDim2.new(1, 0, 1, 0)
MainContainer.ZIndex = 1

-- Main Frame with Enhanced Design
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = MainContainer
MainFrame.BackgroundColor3 = Colors.Background
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -sizes.mainWidth/2, 0.5, -sizes.mainHeight/2)
MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
MainFrame.Active = true
MainFrame.ZIndex = 10

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
MainCorner.Parent = MainFrame

-- Enhanced Gradient
local MainGradient = Instance.new("UIGradient")
MainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.Background),
    ColorSequenceKeypoint.new(0.5, Color3.new(Colors.Background.R * 1.1, Colors.Background.G * 1.1, Colors.Background.B * 1.1)),
    ColorSequenceKeypoint.new(1, Colors.Background)
}
MainGradient.Rotation = 45
MainGradient.Parent = MainFrame

-- Shadow Effect
local MainShadow = Instance.new("Frame")
MainShadow.Name = "MainShadow"
MainShadow.Parent = MainContainer
MainShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainShadow.BackgroundTransparency = 0.6
MainShadow.BorderSizePixel = 0
MainShadow.Position = UDim2.new(0.5, -sizes.mainWidth/2 + 8, 0.5, -sizes.mainHeight/2 + 8)
MainShadow.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
MainShadow.ZIndex = 5

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
ShadowCorner.Parent = MainShadow

-- Enhanced Dragging System
local function setupDragging(frame, shadowFrame)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    local shadowStartPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            if shadowFrame then
                shadowStartPos = shadowFrame.Position
            end
        end
    end
    
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(
                startPos.X.Scale, 
                math.clamp(startPos.X.Offset + delta.X, 0, screenInfo.width - sizes.mainWidth),
                startPos.Y.Scale, 
                math.clamp(startPos.Y.Offset + delta.Y, 0, screenInfo.height - sizes.mainHeight)
            )
            frame.Position = newPos
            
            if shadowFrame and shadowStartPos then
                shadowFrame.Position = UDim2.new(
                    shadowStartPos.X.Scale, 
                    newPos.X.Offset + 8,
                    shadowStartPos.Y.Scale, 
                    newPos.Y.Offset + 8
                )
            end
        end
    end
    
    local function onInputEnded(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end
    
    frame.InputBegan:Connect(onInputBegan)
    frame.InputChanged:Connect(onInputChanged)
    frame.InputEnded:Connect(onInputEnded)
end

setupDragging(MainFrame, MainShadow)

-- Top Bar
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundColor3 = Colors.Primary
TopBar.BorderSizePixel = 0
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.Size = UDim2.new(1, 0, 0, sizes.topBarHeight)
TopBar.ZIndex = 15

local TopBarCorner = Instance.new("UICorner")
TopBarCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
TopBarCorner.Parent = TopBar

local TopBarGradient = Instance.new("UIGradient")
TopBarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.Primary),
    ColorSequenceKeypoint.new(1, Color3.new(Colors.Primary.R * 0.8, Colors.Primary.G * 0.8, Colors.Primary.B * 0.8))
}
TopBarGradient.Rotation = 90
TopBarGradient.Parent = TopBar

-- Title with Military Style
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TopBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, sizes.padding, 0, 0)
TitleLabel.Size = UDim2.new(1, -160, 1, 0)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "üèúÔ∏è DESERT WAR | BYPASS SYSTEM"
TitleLabel.TextColor3 = Colors.Background
TitleLabel.TextSize = sizes.titleSize
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.TextYAlignment = Enum.TextYAlignment.Center
TitleLabel.ZIndex = 20

-- Enhanced Control Icons
local function createTopIcon(icon, position, color, callback)
    local iconFrame = Instance.new("Frame")
    iconFrame.Parent = TopBar
    iconFrame.BackgroundColor3 = color
    iconFrame.BorderSizePixel = 0
    iconFrame.Position = UDim2.new(1, position, 0, 12)
    iconFrame.Size = UDim2.new(0, 32, 0, 32)
    iconFrame.ZIndex = 19
    
    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 8)
    iconCorner.Parent = iconFrame
    
    local iconButton = Instance.new("TextButton")
    iconButton.Parent = iconFrame
    iconButton.BackgroundTransparency = 1
    iconButton.Size = UDim2.new(1, 0, 1, 0)
    iconButton.Font = Enum.Font.GothamBold
    iconButton.Text = icon
    iconButton.TextColor3 = Colors.TextPrimary
    iconButton.TextSize = 16
    iconButton.ZIndex = 20
    
    -- Enhanced Hover Effect
    local function onHover()
        local hoverTween = TweenService:Create(iconFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.new(color.R * 1.4, color.G * 1.4, color.B * 1.4),
            Size = UDim2.new(0, 36, 0, 36)
        })
        hoverTween:Play()
    end
    
    local function onLeave()
        local leaveTween = TweenService:Create(iconFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = color,
            Size = UDim2.new(0, 32, 0, 32)
        })
        leaveTween:Play()
    end
    
    if not isMobile then
        iconButton.MouseEnter:Connect(onHover)
        iconButton.MouseLeave:Connect(onLeave)
    end
    
    if callback then
        if isMobile then
            iconButton.TouchTap:Connect(callback)
        else
            iconButton.MouseButton1Click:Connect(callback)
        end
    end
    
    return iconFrame, iconButton
end

-- Create Enhanced Icons
local BypassIcon = createTopIcon("üîì", -150, Colors.Bypass, nil)
local SettingsIcon = createTopIcon("‚öôÔ∏è", -115, Colors.Info, nil)
local MinimizeIcon = createTopIcon("‚àí", -80, Colors.Warning, function()
    smoothMinimize()
end)
local CloseIcon = createTopIcon("‚úï", -45, Colors.Error, function()
    local closeTween = TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    closeTween:Play()
    
    closeTween.Completed:Connect(function()
        -- Cleanup all connections
        if espUpdateConnection then espUpdateConnection:Disconnect() end
        if aimUpdateConnection then aimUpdateConnection:Disconnect() end
        if hitboxConnection then hitboxConnection:Disconnect() end
        if gunModConnection then gunModConnection:Disconnect() end
        if specialOpsConnection then specialOpsConnection:Disconnect() end
        if vehicleBypassConnection then vehicleBypassConnection:Disconnect() end
        if clothingBypassConnection then clothingBypassConnection:Disconnect() end
        
        -- Clear ESP and restore values
        clearAllESP()
        restoreOriginalValues()
        
        ScreenGui:Destroy()
    end)
end)

-- Tab Container with Enhanced Design
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Parent = MainFrame
TabContainer.BackgroundTransparency = 1
TabContainer.Position = UDim2.new(0, sizes.padding, 0, sizes.topBarHeight + 15)
TabContainer.Size = UDim2.new(1, -sizes.padding*2, 0, sizes.tabHeight)
TabContainer.ZIndex = 12

-- Enhanced Tab Creation Function
local function createTab(name, icon, isActive, position)
    local tab = Instance.new("TextButton")
    tab.Name = name .. "Tab"
    tab.Parent = TabContainer
    tab.BackgroundColor3 = isActive and Colors.Primary or Colors.Secondary
    tab.BorderSizePixel = 0
    tab.Position = UDim2.new(0, position, 0, 0)
    tab.Size = UDim2.new(0, 140, 0, sizes.tabHeight - 5)
    tab.Font = Enum.Font.GothamBold
    tab.Text = icon .. " " .. name
    tab.TextColor3 = isActive and Colors.Background or Colors.TextPrimary
    tab.TextSize = sizes.fontSize
    tab.ZIndex = 15
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 10)
    tabCorner.Parent = tab
    
    -- Tab Gradient
    local tabGradient = Instance.new("UIGradient")
    if isActive then
        tabGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Colors.Primary),
            ColorSequenceKeypoint.new(1, Color3.new(Colors.Primary.R * 0.7, Colors.Primary.G * 0.7, Colors.Primary.B * 0.7))
        }
    else
        tabGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Colors.Secondary),
            ColorSequenceKeypoint.new(1, Color3.new(Colors.Secondary.R * 0.8, Colors.Secondary.G * 0.8, Colors.Secondary.B * 0.8))
        }
    end
    tabGradient.Rotation = 90
    tabGradient.Parent = tab
    
    return tab
end

-- Create Tabs
local MainTab = createTab("Main", "‚öîÔ∏è", true, 0)
local AimbotTab = createTab("Aimbot", "üéØ", false, 150)
local BypassTab = createTab("Bypass", "üîì", false, 300)

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, sizes.padding, 0, sizes.topBarHeight + sizes.tabHeight + 25)
ContentFrame.Size = UDim2.new(1, -sizes.padding*2, 1, -(sizes.topBarHeight + sizes.tabHeight + 70))
ContentFrame.ZIndex = 12

-- Status Bar
local StatusBar = Instance.new("Frame")
StatusBar.Name = "StatusBar"
StatusBar.Parent = MainFrame
StatusBar.BackgroundColor3 = Colors.Surface
StatusBar.BorderSizePixel = 0
StatusBar.Position = UDim2.new(0, 0, 1, -40)
StatusBar.Size = UDim2.new(1, 0, 0, 40)
StatusBar.ZIndex = 12

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
StatusCorner.Parent = StatusBar

local StatusGradient = Instance.new("UIGradient")
StatusGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.Surface),
    ColorSequenceKeypoint.new(1, Color3.new(Colors.Surface.R * 0.8, Colors.Surface.G * 0.8, Colors.Surface.B * 0.8))
}
StatusGradient.Rotation = 90
StatusGradient.Parent = StatusBar

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = StatusBar
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 15, 0, 0)
StatusLabel.Size = UDim2.new(1, -30, 1, 0)
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.Text = "üèúÔ∏è Desert War System Ready"
StatusLabel.TextColor3 = Colors.Success
StatusLabel.TextSize = sizes.fontSize
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.TextYAlignment = Enum.TextYAlignment.Center
StatusLabel.ZIndex = 15

-- Helper Functions
local function updateStatus(text, color)
    StatusLabel.Text = text
    StatusLabel.TextColor3 = color or Colors.Success
    
    local statusTween = TweenService:Create(StatusLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        TextSize = sizes.fontSize + 2
    })
    statusTween:Play()
    
    statusTween.Completed:Connect(function()
        local backTween = TweenService:Create(StatusLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            TextSize = sizes.fontSize
        })
        backTween:Play()
    end)
end

local function safeCall(func, errorMsg)
    local success, result = pcall(func)
    if not success then
        warn("Error in " .. (errorMsg or "function") .. ": " .. tostring(result))
        updateStatus("‚ùå Error: " .. (errorMsg or "Unknown"), Colors.Error)
        return false
    end
    return true
end

-- Enhanced Toggle Switch Creation Function
local function createToggleSwitch(parent, name, text, layoutOrder, isEnabled, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name .. "Frame"
    toggleFrame.Parent = parent
    toggleFrame.BackgroundColor3 = Colors.Surface
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight)
    toggleFrame.LayoutOrder = layoutOrder
    toggleFrame.ZIndex = 16
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 10)
    toggleCorner.Parent = toggleFrame
    
    local toggleGradient = Instance.new("UIGradient")
    toggleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Colors.Surface),
        ColorSequenceKeypoint.new(1, Color3.new(Colors.Surface.R * 0.9, Colors.Surface.G * 0.9, Colors.Surface.B * 0.9))
    }
    toggleGradient.Rotation = 90
    toggleGradient.Parent = toggleFrame
    
    -- Toggle Label
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Name = "Label"
    toggleLabel.Parent = toggleFrame
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Position = UDim2.new(0, 20, 0, 0)
    toggleLabel.Size = UDim2.new(1, -100, 1, 0)
    toggleLabel.Font = Enum.Font.GothamBold
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Colors.TextPrimary
    toggleLabel.TextSize = sizes.fontSize
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.TextYAlignment = Enum.TextYAlignment.Center
    toggleLabel.ZIndex = 17
    
    -- Toggle Switch Background
    local switchBG = Instance.new("Frame")
    switchBG.Name = "SwitchBG"
    switchBG.Parent = toggleFrame
    switchBG.BackgroundColor3 = isEnabled and Colors.ToggleOn or Colors.ToggleOff
    switchBG.BorderSizePixel = 0
    switchBG.Position = UDim2.new(1, -65, 0.5, -15)
    switchBG.Size = UDim2.new(0, 55, 0, 30)
    switchBG.ZIndex = 17
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(0, 15)
    switchCorner.Parent = switchBG
    
    -- Toggle Switch Knob
    local switchKnob = Instance.new("Frame")
    switchKnob.Name = "SwitchKnob"
    switchKnob.Parent = switchBG
    switchKnob.BackgroundColor3 = Colors.ToggleKnob
    switchKnob.BorderSizePixel = 0
    switchKnob.Position = isEnabled and UDim2.new(0, 28, 0, 3) or UDim2.new(0, 3, 0, 3)
    switchKnob.Size = UDim2.new(0, 24, 0, 24)
    switchKnob.ZIndex = 18
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(0, 12)
    knobCorner.Parent = switchKnob
    
    -- Toggle Logic
    local enabled = isEnabled
    
    local function toggleSwitch()
        enabled = not enabled
        
        local bgTween = TweenService:Create(switchBG, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = enabled and Colors.ToggleOn or Colors.ToggleOff
        })
        
        local knobTween = TweenService:Create(switchKnob, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Position = enabled and UDim2.new(0, 28, 0, 3) or UDim2.new(0, 3, 0, 3)
        })
        
        bgTween:Play()
        knobTween:Play()
        
        if callback then
            callback(enabled)
        end
    end
    
    -- Click Events
    if isMobile then
        toggleFrame.TouchTap:Connect(toggleSwitch)
    else
        local toggleButton = Instance.new("TextButton")
        toggleButton.Parent = toggleFrame
        toggleButton.BackgroundTransparency = 1
        toggleButton.Size = UDim2.new(1, 0, 1, 0)
        toggleButton.Text = ""
        toggleButton.ZIndex = 19
        toggleButton.MouseButton1Click:Connect(toggleSwitch)
    end
    
    return toggleFrame, function() return enabled end
end

-- Enhanced Button Creation Function
local function createButton(parent, name, text, layoutOrder, callback)
    local buttonFrame = Instance.new("TextButton")
    buttonFrame.Name = name .. "Frame"
    buttonFrame.Parent = parent
    buttonFrame.BackgroundColor3 = Colors.Surface
    buttonFrame.BorderSizePixel = 0
    buttonFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight)
    buttonFrame.LayoutOrder = layoutOrder
    buttonFrame.ZIndex = 16
    buttonFrame.Font = Enum.Font.GothamBold
    buttonFrame.Text = text
    buttonFrame.TextColor3 = Colors.TextPrimary
    buttonFrame.TextSize = sizes.fontSize
    buttonFrame.TextXAlignment = Enum.TextXAlignment.Left
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = buttonFrame
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Colors.Surface),
        ColorSequenceKeypoint.new(1, Color3.new(Colors.Surface.R * 0.9, Colors.Surface.G * 0.9, Colors.Surface.B * 0.9))
    }
    buttonGradient.Rotation = 90
    buttonGradient.Parent = buttonFrame
    
    local buttonPadding = Instance.new("UIPadding")
    buttonPadding.Parent = buttonFrame
    buttonPadding.PaddingLeft = UDim.new(0, 20)
    
    -- Status Indicator
    local statusIndicator = Instance.new("Frame")
    statusIndicator.Name = "StatusIndicator"
    statusIndicator.Parent = buttonFrame
    statusIndicator.BackgroundColor3 = Colors.Error
    statusIndicator.BorderSizePixel = 0
    statusIndicator.Position = UDim2.new(1, -35, 0.5, -8)
    statusIndicator.Size = UDim2.new(0, 16, 0, 16)
    statusIndicator.ZIndex = 17
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 8)
    indicatorCorner.Parent = statusIndicator
    
    -- Click Events
    if callback then
        if isMobile then
            buttonFrame.TouchTap:Connect(function()
                callback()
                -- Update indicator
                statusIndicator.BackgroundColor3 = Colors.Success
                local indicatorTween = TweenService:Create(statusIndicator, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 20, 0, 20)
                })
                indicatorTween:Play()
                wait(0.3)
                local backTween = TweenService:Create(statusIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 16, 0, 16),
                    BackgroundColor3 = Colors.Error
                })
                backTween:Play()
            end)
        else
            buttonFrame.MouseButton1Click:Connect(function()
                callback()
                -- Update indicator
                statusIndicator.BackgroundColor3 = Colors.Success
                local indicatorTween = TweenService:Create(statusIndicator, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 20, 0, 20)
                })
                indicatorTween:Play()
                wait(0.3)
                local backTween = TweenService:Create(statusIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 16, 0, 16),
                    BackgroundColor3 = Colors.Error
                })
                backTween:Play()
            end)
        end
    end
    
    return buttonFrame
end

-- Enhanced Slider Creation Function
local function createSlider(parent, name, text, minValue, maxValue, defaultValue, layoutOrder, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = name .. "Frame"
    sliderFrame.Parent = parent
    sliderFrame.BackgroundColor3 = Colors.Surface
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Size = UDim2.new(1, 0, 0, sizes.itemHeight + 10)
    sliderFrame.LayoutOrder = layoutOrder
    sliderFrame.ZIndex = 16
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 10)
    sliderCorner.Parent = sliderFrame
    
    local sliderGradient = Instance.new("UIGradient")
    sliderGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Colors.Surface),
        ColorSequenceKeypoint.new(1, Color3.new(Colors.Surface.R * 0.9, Colors.Surface.G * 0.9, Colors.Surface.B * 0.9))
    }
    sliderGradient.Rotation = 90
    sliderGradient.Parent = sliderFrame
    
    -- Slider Label
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Name = "Label"
    sliderLabel.Parent = sliderFrame
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Position = UDim2.new(0, 20, 0, 5)
    sliderLabel.Size = UDim2.new(1, -40, 0, 25)
    sliderLabel.Font = Enum.Font.GothamBold
    sliderLabel.Text = text
    sliderLabel.TextColor3 = Colors.TextPrimary
    sliderLabel.TextSize = sizes.fontSize
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.ZIndex = 17
    
    -- Slider Track Container
    local trackContainer = Instance.new("Frame")
    trackContainer.Name = "TrackContainer"
    trackContainer.Parent = sliderFrame
    trackContainer.BackgroundTransparency = 1
    trackContainer.Position = UDim2.new(0, 20, 0, 35)
    trackContainer.Size = UDim2.new(1, -40, 0, 25)
    trackContainer.ZIndex = 17
    
    -- Slider Track
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Name = "Track"
    sliderTrack.Parent = trackContainer
    sliderTrack.BackgroundColor3 = Colors.SliderTrack
    sliderTrack.BorderSizePixel = 0
    sliderTrack.Position = UDim2.new(0, 0, 0.5, -4)
    sliderTrack.Size = UDim2.new(1, 0, 0, 8)
    sliderTrack.ZIndex = 18
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 4)
    trackCorner.Parent = sliderTrack
    
    -- Slider Fill
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Parent = sliderTrack
    sliderFill.BackgroundColor3 = Colors.SliderFill
    sliderFill.BorderSizePixel = 0
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.ZIndex = 19
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 4)
    fillCorner.Parent = sliderFill
    
    -- Slider Handle
    local sliderHandle = Instance.new("Frame")
    sliderHandle.Name = "Handle"
    sliderHandle.Parent = sliderFill
    sliderHandle.BackgroundColor3 = Colors.SliderHandle
    sliderHandle.BorderSizePixel = 0
    sliderHandle.Position = UDim2.new(1, -8, 0.5, -8)
    sliderHandle.Size = UDim2.new(0, 16, 0, 16)
    sliderHandle.ZIndex = 20
    
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(0, 8)
    handleCorner.Parent = sliderHandle
    
    -- Value Display
    local valueDisplay = Instance.new("TextLabel")
    valueDisplay.Name = "ValueDisplay"
    valueDisplay.Parent = sliderFrame
    valueDisplay.BackgroundTransparency = 1
    valueDisplay.Position = UDim2.new(1, -80, 0, 5)
    valueDisplay.Size = UDim2.new(0, 60, 0, 25)
    valueDisplay.Font = Enum.Font.GothamBold
    valueDisplay.Text = tostring(defaultValue)
    valueDisplay.TextColor3 = Colors.Primary
    valueDisplay.TextSize = sizes.fontSize
    valueDisplay.TextXAlignment = Enum.TextXAlignment.Right
    valueDisplay.TextYAlignment = Enum.TextYAlignment.Center
    valueDisplay.ZIndex = 20
    
    -- Slider Logic
    local dragging = false
    local currentValue = defaultValue
    
    local function updateSlider(input)
        local trackPosition = sliderTrack.AbsolutePosition.X
        local trackSize = sliderTrack.AbsoluteSize.X
        local mouseX = input.Position.X
        
        local relativeX = math.clamp((mouseX - trackPosition) / trackSize, 0, 1)
        currentValue = math.floor(minValue + (maxValue - minValue) * relativeX)
        
        valueDisplay.Text = tostring(currentValue)
        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
        
        if callback then
            callback(currentValue)
        end
        
        return currentValue
    end
    
    trackContainer.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)
    
    trackContainer.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    trackContainer.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    return sliderFrame, function() return currentValue end
end

-- FUNCTIONAL GAME SYSTEMS

-- Enhanced ESP System
local function isEnemy(player)
    if not player or player == LocalPlayer then
        return false
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return false
    end
    
    -- Enhanced team detection for Desert War
    local localTeam = LocalPlayer.Team
    local playerTeam = player.Team
    
    if not localTeam or not playerTeam or localTeam ~= playerTeam then
        return true
    end
    
    return false
end

local function getPlayerDistance(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    return (localChar.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
end

local function createESP(player)
    if not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    
    if not humanoidRootPart or not humanoid then return end
    
    -- Enhanced ESP Box
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "DesertWarESPBox"
    espBox.Parent = humanoidRootPart
    espBox.Size = Vector3.new(4, 6, 1)
    espBox.Color3 = Colors.Primary
    espBox.Transparency = 0.2
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    
    -- Enhanced Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "DesertWarESPHighlight"
    highlight.Parent = character
    highlight.FillColor = Colors.Primary
    highlight.OutlineColor = Colors.TextPrimary
    highlight.FillTransparency = 0.6
    highlight.OutlineTransparency = 0.1
    highlight.Adornee = character
    
    -- Enhanced ESP GUI
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "DesertWarESPGui"
    espGui.Parent = head or humanoidRootPart
    espGui.Size = UDim2.new(0, 250, 0, 120)
    espGui.StudsOffset = Vector3.new(0, 4, 0)
    espGui.AlwaysOnTop = true
    
    -- Player Name with Military Style
    local nameText = Instance.new("TextLabel")
    nameText.Parent = espGui
    nameText.BackgroundTransparency = 1
    nameText.Size = UDim2.new(1, 0, 0.35, 0)
    nameText.Font = Enum.Font.GothamBold
    nameText.TextColor3 = Colors.TextPrimary
    nameText.TextSize = 18
    nameText.TextStrokeTransparency = 0
    nameText.TextStrokeColor3 = Colors.Background
    nameText.Text = "üéØ " .. player.Name
    
    -- Distance Text
    local distanceText = Instance.new("TextLabel")
    distanceText.Parent = espGui
    distanceText.BackgroundTransparency = 1
    distanceText.Position = UDim2.new(0, 0, 0.35, 0)
    distanceText.Size = UDim2.new(1, 0, 0.3, 0)
    distanceText.Font = Enum.Font.GothamBold
    distanceText.TextColor3 = Colors.Primary
    distanceText.TextSize = 16
    distanceText.TextStrokeTransparency = 0
    distanceText.TextStrokeColor3 = Colors.Background
    
    -- Health Text
    local healthText = Instance.new("TextLabel")
    healthText.Parent = espGui
    healthText.BackgroundTransparency = 1
    healthText.Position = UDim2.new(0, 0, 0.65, 0)
    healthText.Size = UDim2.new(1, 0, 0.35, 0)
    healthText.Font = Enum.Font.GothamBold
    healthText.TextColor3 = Colors.Success
    healthText.TextSize = 14
    healthText.TextStrokeTransparency = 0
    healthText.TextStrokeColor3 = Colors.Background
    
    espObjects[player] = {
        box = espBox,
        highlight = highlight,
        gui = espGui,
        nameText = nameText,
        distanceText = distanceText,
        healthText = healthText
    }
    
    local function updateESP()
        if espObjects[player] and player.Character and humanoidRootPart.Parent then
            local distance = getPlayerDistance(player)
            local health = humanoid.Health
            local maxHealth = humanoid.MaxHealth
            
            distanceText.Text = "üìè " .. math.floor(distance) .. "m"
            healthText.Text = "‚ù§Ô∏è " .. math.floor(health) .. "/" .. math.floor(maxHealth)
            
            -- Enhanced color coding based on distance
            if distance < 30 then
                espBox.Color3 = Colors.Error
                highlight.FillColor = Colors.Error
                nameText.TextColor3 = Colors.Error
            elseif distance < 100 then
                espBox.Color3 = Colors.Warning
                highlight.FillColor = Colors.Warning
                nameText.TextColor3 = Colors.Warning
            else
                espBox.Color3 = Colors.Primary
                highlight.FillColor = Colors.Primary
                nameText.TextColor3 = Colors.Primary
            end
            
            -- Health color coding
            local healthPercent = health / maxHealth
            if healthPercent > 0.7 then
                healthText.TextColor3 = Colors.Success
            elseif healthPercent > 0.3 then
                healthText.TextColor3 = Colors.Warning
            else
                healthText.TextColor3 = Colors.Error
            end
        end
    end
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if espEnabled and espObjects[player] then
            updateESP()
        else
            connection:Disconnect()
        end
    end)
end

local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        espObjects[player] = nil
    end
end

local function clearAllESP()
    for player, _ in pairs(espObjects) do
        removeESP(player)
    end
    espObjects = {}
end

local function updateESP()
    if not espEnabled then return end
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and not espObjects[player] then
            createESP(player)
        elseif not isEnemy(player) and espObjects[player] then
            removeESP(player)
        end
    end
end

-- Enhanced Hitbox Expansion System
local function expandHitbox(player)
    if not player.Character then return end
    
    for _, part in pairs(player.Character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            if not originalHitboxSizes[player] then
                originalHitboxSizes[player] = {}
            end
            
            if not originalHitboxSizes[player][part] then
                originalHitboxSizes[player][part] = part.Size
            end
            
            -- Enhanced hitbox expansion for Desert War
            part.Size = originalHitboxSizes[player][part] * 2.5
            part.Transparency = 0.7
            part.CanCollide = false
            
            -- Add visual indicator
            if not part:FindFirstChild("HitboxIndicator") then
                local indicator = Instance.new("SelectionBox")
                indicator.Name = "HitboxIndicator"
                indicator.Parent = part
                indicator.Adornee = part
                indicator.Color3 = Colors.Primary
                indicator.Transparency = 0.5
                indicator.LineThickness = 0.2
            end
        end
    end
end

local function restoreHitbox(player)
    if originalHitboxSizes[player] then
        if player.Character then
            for part, originalSize in pairs(originalHitboxSizes[player]) do
                if part and part.Parent then
                    part.Size = originalSize
                    part.Transparency = 0
                    part.CanCollide = true
                    
                    -- Remove visual indicator
                    local indicator = part:FindFirstChild("HitboxIndicator")
                    if indicator then
                        indicator:Destroy()
                    end
                end
            end
        end
        originalHitboxSizes[player] = nil
    end
end

local function updateHitboxes()
    if hitboxEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if isEnemy(player) then
                expandHitbox(player)
            end
        end
    else
        for _, player in pairs(Players:GetPlayers()) do
            restoreHitbox(player)
        end
    end
end

-- Enhanced Aimbot System
local function getClosestEnemy()
    local closestPlayer = nil
    local closestDistance = fovRadius
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and player.Character then
            local targetPart = player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                local distance = getPlayerDistance(player)
                
                local camera = Camera
                local cameraPosition = camera.CFrame.Position
                local cameraDirection = camera.CFrame.LookVector
                local targetPosition = targetPart.Position
                local directionToTarget = (targetPosition - cameraPosition).Unit
                local angle = math.acos(math.clamp(cameraDirection:Dot(directionToTarget), -1, 1))
                
                -- Enhanced FOV check for Desert War
                if angle < math.rad(60) and distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local function predictTargetPosition(target)
    if not target or not target.Character then
        return nil
    end
    
    local targetPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then
        return nil
    end
    
    local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return targetPart.Position
    end
    
    -- Enhanced velocity prediction for Desert War
    local velocity = humanoidRootPart.Velocity
    local distance = getPlayerDistance(target)
    local timeToTarget = distance / 1200 -- Adjusted for Desert War projectile speed
    
    -- Add gravity compensation
    local gravityCompensation = Vector3.new(0, -workspace.Gravity * timeToTarget * timeToTarget * 0.5, 0)
    
    return targetPart.Position + (velocity * timeToTarget) + gravityCompensation
end

local function aimAtTarget(target)
    if not target or not target.Character then
        return
    end
    
    local predictedPosition = predictTargetPosition(target)
    if not predictedPosition then
        return
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local cameraPosition = Camera.CFrame.Position
    local direction = (predictedPosition - cameraPosition).Unit
    
    local currentCFrame = Camera.CFrame
    local targetCFrame = CFrame.lookAt(cameraPosition, predictedPosition)
    
    -- Enhanced smooth aiming with trickshot mode
    local smoothness = trickshotEnabled and 0.05 or aimSmoothness
    local newCFrame = currentCFrame:Lerp(targetCFrame, smoothness)
    
    -- Add trickshot effects
    if trickshotEnabled then
        local spinEffect = CFrame.Angles(0, math.rad(math.sin(tick() * 10) * 5), 0)
        newCFrame = newCFrame * spinEffect
    end
    
    Camera.CFrame = newCFrame
end

local function startAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
    end
    
    aimUpdateConnection = RunService.Heartbeat:Connect(function()
        if aimbotEnabled then
            currentTarget = getClosestEnemy()
            if currentTarget then
                aimAtTarget(currentTarget)
                
                -- Enhanced auto-lock feature
                if autoLockEnabled and Mouse.Target then
                    -- Simulate mouse click for auto-lock
                    mouse1press()
                    wait(0.01)
                    mouse1release()
                end
            end
        end
    end)
end

local function stopAimbot()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
        aimUpdateConnection = nil
    end
    currentTarget = nil
end

-- Enhanced Gun Modifications System
local function applyGunMods()
    if not gunModsEnabled then return end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    -- Enhanced weapon detection for Desert War
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            -- No recoil system
            for _, script in pairs(tool:GetDescendants()) do
                if script:IsA("LocalScript") then
                    if script.Name:lower():find("recoil") or script.Name:lower():find("kick") then
                        script.Disabled = true
                    end
                end
            end
            
            -- Enhanced modifications
            for _, value in pairs(tool:GetDescendants()) do
                if value:IsA("NumberValue") then
                    if value.Name:lower():find("firerate") or value.Name:lower():find("cooldown") then
                        value.Value = value.Value * 0.05 -- 20x faster (Rapid Fire)
                    elseif value.Name:lower():find("damage") then
                        value.Value = value.Value * 3 -- 3x damage
                    elseif value.Name:lower():find("ammo") or value.Name:lower():find("clip") or value.Name:lower():find("magazine") then
                        value.Value = 9999 -- Infinite ammo
                    elseif value.Name:lower():find("reload") then
                        value.Value = 0.1 -- Fast reload (0.1 seconds)
                    elseif value.Name:lower():find("spread") or value.Name:lower():find("accuracy") then
                        value.Value = 0 -- Perfect accuracy
                    end
                end
                
                -- Handle IntValue and other value types
                if value:IsA("IntValue") then
                    if value.Name:lower():find("ammo") or value.Name:lower():find("clip") then
                        value.Value = 9999
                    end
                end
            end
            
            -- Enhanced weapon effects
            for _, part in pairs(tool:GetDescendants()) do
                if part:IsA("BasePart") then
                    -- Add weapon glow effect
                    if not part:FindFirstChild("WeaponGlow") then
                        local glow = Instance.new("PointLight")
                        glow.Name = "WeaponGlow"
                        glow.Parent = part
                        glow.Color = Colors.Primary
                        glow.Brightness = 2
                        glow.Range = 10
                    end
                end
            end
        end
    end
    
    -- Apply to backpack tools as well
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            for _, value in pairs(tool:GetDescendants()) do
                if value:IsA("NumberValue") then
                    if value.Name:lower():find("firerate") or value.Name:lower():find("cooldown") then
                        value.Value = value.Value * 0.05
                    elseif value.Name:lower():find("damage") then
                        value.Value = value.Value * 3
                    elseif value.Name:lower():find("ammo") or value.Name:lower():find("clip") then
                        value.Value = 9999
                    elseif value.Name:lower():find("reload") then
                        value.Value = 0.1
                    end
                end
            end
        end
    end
end

-- Enhanced Special Operations System
local function enableSpecialOps()
    if not specialOpsEnabled then return end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        -- Enhanced abilities for Desert War
        humanoid.WalkSpeed = 75 -- Super speed
        humanoid.JumpPower = 150 -- Super jump
        
        -- Enhanced god mode
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        
        -- No fall damage
        humanoid.PlatformStand = false
        
        -- Add special effects
        if not character:FindFirstChild("SpecialOpsAura") then
            local aura = Instance.new("PointLight")
            aura.Name = "SpecialOpsAura"
            aura.Parent = character:FindFirstChild("HumanoidRootPart")
            aura.Color = Colors.Primary
            aura.Brightness = 3
            aura.Range = 20
        end
    end
    
    -- Enhanced area unlocking for Desert War
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Part") then
            if obj.Name:lower():find("door") or obj.Name:lower():find("gate") or obj.Name:lower():find("barrier") then
                obj.CanCollide = false
                obj.Transparency = 0.7
                
                -- Add bypass indicator
                if not obj:FindFirstChild("BypassIndicator") then
                    local indicator = Instance.new("BillboardGui")
                    indicator.Name = "BypassIndicator"
                    indicator.Parent = obj
                    indicator.Size = UDim2.new(0, 100, 0, 50)
                    
                    local label = Instance.new("TextLabel")
                    label.Parent = indicator
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.Text = "üîì BYPASSED"
                    label.TextColor3 = Colors.Success
                    label.TextSize = 14
                    label.Font = Enum.Font.GothamBold
                end
            end
        end
    end
    
    -- Unlock special classes/weapons
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("BoolValue") and (obj.Name:lower():find("unlock") or obj.Name:lower():find("premium")) then
            obj.Value = true
        end
    end
end

-- BYPASS SYSTEMS

-- Vehicle Bypass System
local function applyVehicleBypass()
    if not vehicleBypassEnabled then return end
    
    for _, vehicle in pairs(Workspace:GetDescendants()) do
        if vehicle:IsA("VehicleSeat") or vehicle.Name:lower():find("vehicle") or vehicle.Name:lower():find("car") or vehicle.Name:lower():find("tank") then
            -- Unlimited fuel
            if unlimitedFuel then
                for _, value in pairs(vehicle:GetDescendants()) do
                    if value:IsA("NumberValue") and (value.Name:lower():find("fuel") or value.Name:lower():find("gas")) then
                        value.Value = math.huge
                    end
                end
            end
            
            -- Speed boost
            if vehicleSpeedBoost then
                if vehicle:IsA("VehicleSeat") then
                    vehicle.MaxSpeed = 200 -- Increased max speed
                    vehicle.Torque = 10000 -- Increased torque
                end
                
                for _, value in pairs(vehicle:GetDescendants()) do
                    if value:IsA("NumberValue") then
                        if value.Name:lower():find("speed") or value.Name:lower():find("velocity") then
                            value.Value = value.Value * 3
                        elseif value.Name:lower():find("acceleration") then
                            value.Value = value.Value * 2
                        end
                    end
                end
            end
            
            -- No vehicle damage
            if noVehicleDamage then
                for _, value in pairs(vehicle:GetDescendants()) do
                    if value:IsA("NumberValue") and (value.Name:lower():find("health") or value.Name:lower():find("durability")) then
                        value.Value = math.huge
                    end
                end
                
                -- Make vehicle parts indestructible
                for _, part in pairs(vehicle:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                        if not part:FindFirstChild("VehicleProtection") then
                            local protection = Instance.new("BodyVelocity")
                            protection.Name = "VehicleProtection"
                            protection.Parent = part
                            protection.MaxForce = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end
            
            -- Add bypass indicator
            if not vehicle:FindFirstChild("VehicleBypassIndicator") then
                local indicator = Instance.new("BillboardGui")
                indicator.Name = "VehicleBypassIndicator"
                indicator.Parent = vehicle
                indicator.Size = UDim2.new(0, 150, 0, 60)
                
                local label = Instance.new("TextLabel")
                label.Parent = indicator
                label.Size = UDim2.new(1, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.Text = "üöó VEHICLE BYPASSED"
                label.TextColor3 = Colors.Bypass
                label.TextSize = 12
                label.Font = Enum.Font.GothamBold
            end
            
            bypassedVehicles[vehicle] = true
        end
    end
end

-- Clothing/Skin Bypass System
local function applyClothingBypass()
    if not clothingBypassEnabled then return end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    -- Bypass clothing restrictions
    for _, accessory in pairs(character:GetChildren()) do
        if accessory:IsA("Accessory") then
            bypassedClothing[accessory] = true
        end
    end
    
    -- Apply premium skins/clothing
    local humanoidDescription = game:GetService("Players"):GetHumanoidDescriptionFromUserId(LocalPlayer.UserId)
    
    -- Premium shirt IDs (example IDs - replace with actual Desert War clothing IDs)
    local premiumShirts = {
        1234567890, -- Desert Camo Uniform
        2345678901, -- Special Forces Gear
        3456789012, -- Elite Sniper Outfit
        4567890123, -- Tank Commander Uniform
        5678901234  -- Pilot Suit
    }
    
    local premiumPants = {
        6789012345, -- Desert Combat Pants
        7890123456, -- Tactical Cargo Pants
        8901234567, -- Military Fatigues
        9012345678, -- Special Ops Pants
        1023456789  -- Pilot Pants
    }
    
    local premiumHats = {
        1134567890, -- Military Helmet
        1245678901, -- Beret
        1356789012, -- Night Vision Goggles
        1467890123, -- Gas Mask
        1578901234  -- Pilot Helmet
    }
    
    -- Apply random premium clothing
    if humanoidDescription then
        humanoidDescription.Shirt = premiumShirts[math.random(1, #premiumShirts)]
        humanoidDescription.Pants = premiumPants[math.random(1, #premiumPants)]
        
        -- Apply to character
        pcall(function()
            humanoid:ApplyDescription(humanoidDescription)
        end)
    end
    
    -- Add clothing bypass indicator
    if not character:FindFirstChild("ClothingBypassIndicator") then
        local indicator = Instance.new("BillboardGui")
        indicator.Name = "ClothingBypassIndicator"
        indicator.Parent = character:FindFirstChild("Head")
        indicator.Size = UDim2.new(0, 200, 0, 50)
        indicator.StudsOffset = Vector3.new(0, 2, 0)
        
        local label = Instance.new("TextLabel")
        label.Parent = indicator
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = "üëï PREMIUM CLOTHING UNLOCKED"
        label.TextColor3 = Colors.Bypass
        label.TextSize = 14
        label.Font = Enum.Font.GothamBold
    end
end

-- Restore Original Values
local function restoreOriginalValues()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = originalWalkSpeed
            humanoid.JumpPower = originalJumpPower
            humanoid.MaxHealth = 100
            humanoid.Health = 100
        end
        
        -- Remove special effects
        local aura = character:FindFirstChild("SpecialOpsAura")
        if aura then aura:Destroy() end
        
        local clothingIndicator = character:FindFirstChild("ClothingBypassIndicator")
        if clothingIndicator then clothingIndicator:Destroy() end
    end
    
    -- Restore hitboxes
    for _, player in pairs(Players:GetPlayers()) do
        restoreHitbox(player)
    end
    
    -- Restore vehicles
    for vehicle, _ in pairs(bypassedVehicles) do
        if vehicle and vehicle.Parent then
            local indicator = vehicle:FindFirstChild("VehicleBypassIndicator")
            if indicator then indicator:Destroy() end
        end
    end
    bypassedVehicles = {}
    
    -- Clear bypassed clothing
    bypassedClothing = {}
end

-- Minimized Frame
local MinimizedFrame = Instance.new("Frame")
MinimizedFrame.Name = "MinimizedFrame"
MinimizedFrame.Parent = MainContainer
MinimizedFrame.BackgroundColor3 = Colors.Background
MinimizedFrame.BorderSizePixel = 0
MinimizedFrame.Position = UDim2.new(0, 50, 0, 50)
MinimizedFrame.Size = UDim2.new(0, 250, 0, 60)
MinimizedFrame.Visible = false
MinimizedFrame.Active = true
MinimizedFrame.ZIndex = 25

local MinFrameCorner = Instance.new("UICorner")
MinFrameCorner.CornerRadius = UDim.new(0, sizes.cornerRadius)
MinFrameCorner.Parent = MinimizedFrame

local MinFrameGradient = Instance.new("UIGradient")
MinFrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Colors.Primary),
    ColorSequenceKeypoint.new(1, Colors.Background)
}
MinFrameGradient.Rotation = 90
MinFrameGradient.Parent = MinimizedFrame

local RestoreButton = Instance.new("TextButton")
RestoreButton.Name = "RestoreButton"
RestoreButton.Parent = MinimizedFrame
RestoreButton.BackgroundTransparency = 1
RestoreButton.Size = UDim2.new(1, 0, 1, 0)
RestoreButton.Font = Enum.Font.GothamBold
RestoreButton.Text = "üèúÔ∏è Desert War Bypass"
RestoreButton.TextColor3 = Colors.TextPrimary
RestoreButton.TextSize = sizes.fontSize + 2
RestoreButton.ZIndex = 26

setupDragging(MinimizedFrame)

-- Animation Functions
function smoothMinimize()
    isMinimized = true
    
    local minimizeTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    
    local shadowTween = TweenService:Create(MainShadow, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    
    minimizeTween:Play()
    shadowTween:Play()
    
    minimizeTween.Completed:Connect(function()
        MainFrame.Visible = false
        MainShadow.Visible = false
        MinimizedFrame.Visible = true
        
        MinimizedFrame.Size = UDim2.new(0, 0, 0, 0)
        local restoreTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.4, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 250, 0, 60)
        })
        restoreTween:Play()
    end)
end

local function smoothRestore()
    isMinimized = false
    
    local hideTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 0, 0, 0)
    })
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MinimizedFrame.Visible = false
        MainFrame.Visible = true
        MainShadow.Visible = true
        
        MainFrame.Size = UDim2.new(0, 0, 0, 0)
        MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        MainShadow.Size = UDim2.new(0, 0, 0, 0)
        MainShadow.BackgroundTransparency = 1
        
        local restoreTween = TweenService:Create(MainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight),
            Position = UDim2.new(0.5, -sizes.mainWidth/2, 0.5, -sizes.mainHeight/2)
        })
        
        local shadowRestoreTween = TweenService:Create(MainShadow, TweenInfo.new(0.6, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight),
            BackgroundTransparency = 0.6
        })
        
        restoreTween:Play()
        shadowRestoreTween:Play()
    end)
end

-- Create Main Tab Content
local function createMainTabContent()
    local mainContent = Instance.new("Frame")
    mainContent.Name = "MainContent"
    mainContent.Parent = ContentFrame
    mainContent.BackgroundTransparency = 1
    mainContent.Size = UDim2.new(1, 0, 1, 0)
    mainContent.ZIndex = 13
    
    local mainLayout = Instance.new("UIListLayout")
    mainLayout.Parent = mainContent
    mainLayout.SortOrder = Enum.SortOrder.LayoutOrder
    mainLayout.Padding = UDim.new(0, 12)
    
    -- ESP Toggle
    local espToggle, getESPState = createToggleSwitch(mainContent, "ESP", "üîç Enable ESP", 1, false, function(enabled)
        espEnabled = enabled
        if enabled then
            updateStatus("üëÅÔ∏è ESP System Activated", Colors.Success)
            safeCall(updateESP, "ESP")
        else
            updateStatus("üëÅÔ∏è ESP System Deactivated", Colors.Warning)
            clearAllESP()
        end
    end)
    
    -- Hitbox Toggle
    local hitboxToggle, getHitboxState = createToggleSwitch(mainContent, "Hitbox", "üíÄ Enable Enemy Hitbox", 2, false, function(enabled)
        hitboxEnabled = enabled
        if enabled then
            updateStatus("üíÄ Enemy Hitbox Expanded", Colors.Success)
            safeCall(updateHitboxes, "Hitbox")
        else
            updateStatus("üíÄ Hitbox Restored to Normal", Colors.Warning)
            safeCall(updateHitboxes, "Hitbox")
        end
    end)
    
    -- Special Operations Button
    local specialOpsButton = createButton(mainContent, "SpecialOps", "üî∞ Unlock Special Operations", 3, function()
        specialOpsEnabled = not specialOpsEnabled
        if specialOpsEnabled then
            updateStatus("üî∞ Special Operations Unlocked", Colors.Success)
            safeCall(enableSpecialOps, "SpecialOps")
        else
            updateStatus("üî∞ Special Operations Locked", Colors.Warning)
            safeCall(restoreOriginalValues, "RestoreSpecialOps")
        end
    end)
    
    -- Gun Mods Toggle
    local gunModsToggle, getGunModsState = createToggleSwitch(mainContent, "GunMods", "üî´ Gun Mods (No Recoil + Rapid Fire + Fast Reload + Infinite Ammo)", 4, false, function(enabled)
        gunModsEnabled = enabled
        if enabled then
            updateStatus("üî´ Gun Modifications Active", Colors.Success)
            safeCall(applyGunMods, "GunMods")
        else
            updateStatus("üî´ Gun Modifications Disabled", Colors.Warning)
        end
    end)
    
    return mainContent
end

-- Create Aimbot Tab Content
local function createAimbotTabContent()
    local aimbotContent = Instance.new("Frame")
    aimbotContent.Name = "AimbotContent"
    aimbotContent.Parent = ContentFrame
    aimbotContent.BackgroundTransparency = 1
    aimbotContent.Size = UDim2.new(1, 0, 1, 0)
    aimbotContent.Visible = false
    aimbotContent.ZIndex = 13
    
    local aimbotLayout = Instance.new("UIListLayout")
    aimbotLayout.Parent = aimbotContent
    aimbotLayout.SortOrder = Enum.SortOrder.LayoutOrder
    aimbotLayout.Padding = UDim.new(0, 12)
    
    -- Aimbot Toggle
    local aimbotToggle, getAimbotState = createToggleSwitch(aimbotContent, "Aimbot", "üéØ Enable Aimbot", 1, false, function(enabled)
        aimbotEnabled = enabled
        if enabled then
            updateStatus("üéØ Aimbot System Activated", Colors.Success)
            safeCall(startAimbot, "Aimbot")
        else
            updateStatus("üéØ Aimbot System Deactivated", Colors.Warning)
            safeCall(stopAimbot, "Aimbot")
        end
    end)
    
    -- Auto-Lock Toggle
    local autoLockToggle, getAutoLockState = createToggleSwitch(aimbotContent, "AutoLock", "üîí Enable Auto-Lock", 2, false, function(enabled)
        autoLockEnabled = enabled
        if enabled then
            updateStatus("üîí Auto-Lock System Activated", Colors.Success)
        else
            updateStatus("üîí Auto-Lock System Deactivated", Colors.Warning)
        end
    end)
    
    -- Trickshot Toggle
    local trickshotToggle, getTrickshotState = createToggleSwitch(aimbotContent, "Trickshot", "üåü Enable Trickshot Mode", 3, false, function(enabled)
        trickshotEnabled = enabled
        if enabled then
            updateStatus("üåü Trickshot Mode Activated", Colors.Success)
            aimSmoothness = 0.05 -- More precise for trickshots
        else
            updateStatus("üåü Trickshot Mode Deactivated", Colors.Warning)
            aimSmoothness = 0.15 -- Normal smoothness
        end
    end)
    
    -- FOV Slider
    local fovSlider, getFOVValue = createSlider(aimbotContent, "FOV", "üéØ FOV Radius", 250, 750, 500, 4, function(value)
        fovRadius = value
        updateStatus("üì° FOV Radius Set to " .. value .. " studs", Colors.Info)
    end)
    
    return aimbotContent
end

-- Create Bypass Tab Content
local function createBypassTabContent()
    local bypassContent = Instance.new("Frame")
    bypassContent.Name = "BypassContent"
    bypassContent.Parent = ContentFrame
    bypassContent.BackgroundTransparency = 1
    bypassContent.Size = UDim2.new(1, 0, 1, 0)
    bypassContent.Visible = false
    bypassContent.ZIndex = 13
    
    local bypassLayout = Instance.new("UIListLayout")
    bypassLayout.Parent = bypassContent
    bypassLayout.SortOrder = Enum.SortOrder.LayoutOrder
    bypassLayout.Padding = UDim.new(0, 12)
    
    -- Vehicle Bypass Toggle
    local vehicleBypassToggle, getVehicleBypassState = createToggleSwitch(bypassContent, "VehicleBypass", "üöó Enable Vehicle Bypass", 1, false, function(enabled)
        vehicleBypassEnabled = enabled
        if enabled then
            updateStatus("üöó Vehicle Bypass System Activated", Colors.Bypass)
            safeCall(applyVehicleBypass, "VehicleBypass")
        else
            updateStatus("üöó Vehicle Bypass System Deactivated", Colors.Warning)
        end
    end)
    
    -- Unlimited Fuel Toggle
    local unlimitedFuelToggle, getUnlimitedFuelState = createToggleSwitch(bypassContent, "UnlimitedFuel", "‚õΩ Unlimited Fuel", 2, false, function(enabled)
        unlimitedFuel = enabled
        if enabled then
            updateStatus("‚õΩ Unlimited Fuel Activated", Colors.Success)
            if vehicleBypassEnabled then
                safeCall(applyVehicleBypass, "UnlimitedFuel")
            end
        else
            updateStatus("‚õΩ Unlimited Fuel Deactivated", Colors.Warning)
        end
    end)
    
    -- Vehicle Speed Boost Toggle
    local speedBoostToggle, getSpeedBoostState = createToggleSwitch(bypassContent, "SpeedBoost", "üèéÔ∏è Vehicle Speed Boost", 3, false, function(enabled)
        vehicleSpeedBoost = enabled
        if enabled then
            updateStatus("üèéÔ∏è Vehicle Speed Boost Activated", Colors.Success)
            if vehicleBypassEnabled then
                safeCall(applyVehicleBypass, "SpeedBoost")
            end
        else
            updateStatus("üèéÔ∏è Vehicle Speed Boost Deactivated", Colors.Warning)
        end
    end)
    
    -- No Vehicle Damage Toggle
    local noVehicleDamageToggle, getNoVehicleDamageState = createToggleSwitch(bypassContent, "NoVehicleDamage", "üõ°Ô∏è No Vehicle Damage", 4, false, function(enabled)
        noVehicleDamage = enabled
        if enabled then
            updateStatus("üõ°Ô∏è Vehicle Protection Activated", Colors.Success)
            if vehicleBypassEnabled then
                safeCall(applyVehicleBypass, "NoVehicleDamage")
            end
        else
            updateStatus("üõ°Ô∏è Vehicle Protection Deactivated", Colors.Warning)
        end
    end)
    
    -- Clothing Bypass Toggle
    local clothingBypassToggle, getClothingBypassState = createToggleSwitch(bypassContent, "ClothingBypass", "üëï Enable Clothing Bypass", 5, false, function(enabled)
        clothingBypassEnabled = enabled
        if enabled then
            updateStatus("üëï Premium Clothing Unlocked", Colors.Bypass)
            safeCall(applyClothingBypass, "ClothingBypass")
        else
            updateStatus("üëï Clothing Bypass Deactivated", Colors.Warning)
        end
    end)
    
    return bypassContent
end

-- Create tab contents
local mainTabContent = createMainTabContent()
local aimbotTabContent = createAimbotTabContent()
local bypassTabContent = createBypassTabContent()

-- Tab Switching Function
local function switchTab(tabName)
    currentTab = tabName
    
    if tabName == "Main" then
        MainTab.BackgroundColor3 = Colors.Primary
        MainTab.TextColor3 = Colors.Background
        AimbotTab.BackgroundColor3 = Colors.Secondary
        AimbotTab.TextColor3 = Colors.TextPrimary
        BypassTab.BackgroundColor3 = Colors.Secondary
        BypassTab.TextColor3 = Colors.TextPrimary
        
        mainTabContent.Visible = true
        aimbotTabContent.Visible = false
        bypassTabContent.Visible = false
        
        updateStatus("‚öîÔ∏è Main Combat Tab Active", Colors.Info)
    elseif tabName == "Aimbot" then
        MainTab.BackgroundColor3 = Colors.Secondary
        MainTab.TextColor3 = Colors.TextPrimary
        AimbotTab.BackgroundColor3 = Colors.Primary
        AimbotTab.TextColor3 = Colors.Background
        BypassTab.BackgroundColor3 = Colors.Secondary
        BypassTab.TextColor3 = Colors.TextPrimary
        
        mainTabContent.Visible = false
        aimbotTabContent.Visible = true
        bypassTabContent.Visible = false
        
        updateStatus("üéØ Aimbot Tab Active", Colors.Info)
    else -- Bypass
        MainTab.BackgroundColor3 = Colors.Secondary
        MainTab.TextColor3 = Colors.TextPrimary
        AimbotTab.BackgroundColor3 = Colors.Secondary
        AimbotTab.TextColor3 = Colors.TextPrimary
        BypassTab.BackgroundColor3 = Colors.Primary
        BypassTab.TextColor3 = Colors.Background
        
        mainTabContent.Visible = false
        aimbotTabContent.Visible = false
        bypassTabContent.Visible = true
        
        updateStatus("üîì Bypass Systems Tab Active", Colors.Bypass)
    end
end

-- Event Connections
if isMobile then
    MainTab.TouchTap:Connect(function() switchTab("Main") end)
    AimbotTab.TouchTap:Connect(function() switchTab("Aimbot") end)
    BypassTab.TouchTap:Connect(function() switchTab("Bypass") end)
    RestoreButton.TouchTap:Connect(smoothRestore)
else
    MainTab.MouseButton1Click:Connect(function() switchTab("Main") end)
    AimbotTab.MouseButton1Click:Connect(function() switchTab("Aimbot") end)
    BypassTab.MouseButton1Click:Connect(function() switchTab("Bypass") end)
    RestoreButton.MouseButton1Click:Connect(smoothRestore)
end

-- Player Events
Players.PlayerAdded:Connect(function(player)
    wait(2)
    if espEnabled then
        safeCall(updateESP, "PlayerAdded")
    end
    if hitboxEnabled then
        safeCall(updateHitboxes, "PlayerAdded")
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
    restoreHitbox(player)
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function(character)
    wait(3)
    
    -- Store original values
    local humanoid = character:WaitForChild("Humanoid")
    originalWalkSpeed = humanoid.WalkSpeed
    originalJumpPower = humanoid.JumpPower
    
    -- Reapply active features
    if espEnabled then
        safeCall(updateESP, "CharacterAdded")
    end
    if hitboxEnabled then
        safeCall(updateHitboxes, "CharacterAdded")
    end
    if specialOpsEnabled then
        safeCall(enableSpecialOps, "CharacterAdded")
    end
    if gunModsEnabled then
        safeCall(applyGunMods, "CharacterAdded")
    end
    if vehicleBypassEnabled then
        safeCall(applyVehicleBypass, "CharacterAdded")
    end
    if clothingBypassEnabled then
        safeCall(applyClothingBypass, "CharacterAdded")
    end
end)

-- Continuous Updates
spawn(function()
    while ScreenGui.Parent do
        wait(1)
        
        -- Update ESP
        if espEnabled then
            safeCall(updateESP, "ContinuousUpdate")
        end
        
        -- Update Hitboxes
        if hitboxEnabled then
            safeCall(updateHitboxes, "ContinuousUpdate")
        end
        
        -- Apply Gun Mods
        if gunModsEnabled then
            safeCall(applyGunMods, "ContinuousUpdate")
        end
        
        -- Apply Special Ops
        if specialOpsEnabled then
            safeCall(enableSpecialOps, "ContinuousUpdate")
        end
        
        -- Apply Vehicle Bypass
        if vehicleBypassEnabled then
            safeCall(applyVehicleBypass, "ContinuousUpdate")
        end
        
        -- Apply Clothing Bypass
        if clothingBypassEnabled then
            safeCall(applyClothingBypass, "ContinuousUpdate")
        end
    end
end)

-- Screen resize handling
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
    screenInfo = getScreenInfo()
    sizes = getResponsiveSizes()
    
    if not isMinimized then
        MainFrame.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
        MainFrame.Position = UDim2.new(0.5, -sizes.mainWidth/2, 0.5, -sizes.mainHeight/2)
        MainShadow.Size = UDim2.new(0, sizes.mainWidth, 0, sizes.mainHeight)
        MainShadow.Position = UDim2.new(0.5, -sizes.mainWidth/2 + 8, 0.5, -sizes.mainHeight/2 + 8)
    end
end)

-- Initial setup
updateStatus("üèúÔ∏è Desert War Bypass System Loaded Successfully!", Colors.Success)

-- Enhanced Notification system
local function showNotification(title, message, duration, color)
    local notifFrame = Instance.new("Frame")
    notifFrame.Parent = ScreenGui
    notifFrame.BackgroundColor3 = color or Colors.Background
    notifFrame.BorderSizePixel = 0
    notifFrame.Position = UDim2.new(1, 10, 0, 100)
    notifFrame.Size = UDim2.new(0, 350, 0, 100)
    notifFrame.ZIndex = 100
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 12)
    notifCorner.Parent = notifFrame
    
    local notifGradient = Instance.new("UIGradient")
    notifGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, color or Colors.Background),
        ColorSequenceKeypoint.new(1, Color3.new((color or Colors.Background).R * 0.8, (color or Colors.Background).G * 0.8, (color or Colors.Background).B * 0.8))
    }
    notifGradient.Rotation = 90
    notifGradient.Parent = notifFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Parent = notifFrame
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 20, 0, 15)
    titleLabel.Size = UDim2.new(1, -40, 0, 30)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = Colors.Primary
    titleLabel.TextSize = 18
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.ZIndex = 101
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Parent = notifFrame
    messageLabel.BackgroundTransparency = 1
    messageLabel.Position = UDim2.new(0, 20, 0, 45)
    messageLabel.Size = UDim2.new(1, -40, 0, 40)
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.Text = message
    messageLabel.TextColor3 = Colors.TextSecondary
    messageLabel.TextSize = 14
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true
    messageLabel.ZIndex = 101
    
    -- Slide in animation
    local slideIn = TweenService:Create(notifFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -360, 0, 100)
    })
    slideIn:Play()
    
    -- Auto dismiss
    wait(duration or 4)
    
    local slideOut = TweenService:Create(notifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
        Position = UDim2.new(1, 10, 0, 100)
    })
    slideOut:Play()
    
    slideOut.Completed:Connect(function()
        notifFrame:Destroy()
    end)
end

-- Welcome notifications
spawn(function()
    wait(2)
    showNotification("üèúÔ∏è Desert War Bypass", "Complete script with vehicle & clothing bypass loaded!", 5, Colors.Success)
    wait(3)
    showNotification("üîì Bypass Features", "Vehicle bypass and premium clothing unlocked!", 4, Colors.Bypass)
end)

print("üèúÔ∏è Desert War - Complete Bypass Script Loaded!")
print("‚úÖ Features: ESP, Aimbot, Gun Mods, Special Ops, Vehicle Bypass, Clothing Bypass")
print("üéØ Version: 7.0 - Full Features + Enhanced Bypass System")
print("üîì All bypass systems are fully functional!")
