-- Dessert War Enhanced Script - Professional Edition
-- Version: 2.0 - Complete ESP & Auto Aim System
-- Features: Advanced ESP, Smart Auto Aim, Run Speed, Minimizable GUI

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Variables
local espEnabled = false
local autoAimEnabled = false
local runSpeedEnabled = false
local espObjects = {}
local currentTarget = nil
local aimSmoothness = 0.15
local maxAimDistance = 1000
local maxESPDistance = 2000
local originalWalkSpeed = 16
local runSpeed = 100
local isMinimized = false

-- Connections
local espUpdateConnection = nil
local aimUpdateConnection = nil
local speedConnection = nil

-- Mobile Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Create GUI Elements
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TopBar = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local ContentFrame = Instance.new("Frame")
local MinimizedFrame = Instance.new("Frame")
local RestoreButton = Instance.new("TextButton")

-- Control Buttons
local ESPButton = Instance.new("TextButton")
local AimButton = Instance.new("TextButton")
local SpeedButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")

-- Setup ScreenGui
ScreenGui.Name = "DessertWarEnhanced"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.IgnoreGuiInset = true

-- Calculate optimal sizes
local function getOptimalSize()
    local screenSize = Camera.ViewportSize
    if isMobile then
        return {
            width = math.min(screenSize.X * 0.85, 300),
            height = 200,
            buttonHeight = 40,
            fontSize = 12
        }
    else
        return {
            width = 280,
            height = 180,
            buttonHeight = 35,
            fontSize = 11
        }
    end
end

local sizes = getOptimalSize()

-- Main Frame Setup
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0, 30, 0, 120)
MainFrame.Size = UDim2.new(0, sizes.width, 0, sizes.height)
MainFrame.Active = true
MainFrame.ZIndex = 10

-- Gradient Background
local MainGradient = Instance.new("UIGradient")
MainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 25, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
}
MainGradient.Rotation = 135
MainGradient.Parent = MainFrame

-- Shadow Effect
local MainShadow = Instance.new("Frame")
MainShadow.Name = "Shadow"
MainShadow.Parent = ScreenGui
MainShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainShadow.BackgroundTransparency = 0.7
MainShadow.BorderSizePixel = 0
MainShadow.Position = UDim2.new(0, 35, 0, 125)
MainShadow.Size = UDim2.new(0, sizes.width, 0, sizes.height)
MainShadow.ZIndex = 5

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 15)
MainCorner.Parent = MainFrame

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0, 15)
ShadowCorner.Parent = MainShadow

-- Enhanced Dragging System
local function makeDraggable(frame, shadowFrame)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    local shadowStartPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            if shadowFrame then
                shadowStartPos = shadowFrame.Position
            end
        end
    end
    
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            frame.Position = newPos
            
            if shadowFrame and shadowStartPos then
                shadowFrame.Position = UDim2.new(shadowStartPos.X.Scale, shadowStartPos.X.Offset + delta.X + 5, shadowStartPos.Y.Scale, shadowStartPos.Y.Offset + delta.Y + 5)
            end
        end
    end
    
    local function onInputEnded(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end
    
    frame.InputBegan:Connect(onInputBegan)
    frame.InputChanged:Connect(onInputChanged)
    frame.InputEnded:Connect(onInputEnded)
end

makeDraggable(MainFrame, MainShadow)

-- Top Bar
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 45)
TopBar.ZIndex = 15

local TopBarGradient = Instance.new("UIGradient")
TopBarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 75)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 50))
}
TopBarGradient.Rotation = 90
TopBarGradient.Parent = TopBar

local TopCorner = Instance.new("UICorner")
TopCorner.CornerRadius = UDim.new(0, 15)
TopCorner.Parent = TopBar

-- Title with Icon
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TopBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, 15, 0, 5)
TitleLabel.Size = UDim2.new(1, -100, 0, 20)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "üç∞ DESSERT WAR"
TitleLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
TitleLabel.TextSize = sizes.fontSize + 2
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.ZIndex = 20

local SubTitle = Instance.new("TextLabel")
SubTitle.Name = "SubTitle"
SubTitle.Parent = TopBar
SubTitle.BackgroundTransparency = 1
SubTitle.Position = UDim2.new(0, 15, 0, 22)
SubTitle.Size = UDim2.new(1, -100, 0, 18)
SubTitle.Font = Enum.Font.Gotham
SubTitle.Text = "v2.0 ‚Ä¢ Enhanced Edition"
SubTitle.TextColor3 = Color3.fromRGB(150, 150, 200)
SubTitle.TextSize = sizes.fontSize - 2
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.ZIndex = 20

-- Control Buttons
local buttonSize = isMobile and 35 or 30
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = TopBar
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -buttonSize*2-10, 0, (45-buttonSize)/2)
MinimizeButton.Size = UDim2.new(0, buttonSize, 0, buttonSize)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "‚àí"
MinimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.TextSize = isMobile and 20 or 18
MinimizeButton.ZIndex = 20

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 8)
MinCorner.Parent = MinimizeButton

CloseButton.Name = "CloseButton"
CloseButton.Parent = TopBar
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -buttonSize-5, 0, (45-buttonSize)/2)
CloseButton.Size = UDim2.new(0, buttonSize, 0, buttonSize)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "‚úï"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = isMobile and 16 or 14
CloseButton.ZIndex = 20

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Frame
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 45)
ContentFrame.Size = UDim2.new(1, 0, 1, -45)
ContentFrame.ZIndex = 12

-- Content Layout
local ContentLayout = Instance.new("UIListLayout")
ContentLayout.Parent = ContentFrame
ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentLayout.Padding = UDim.new(0, 8)
ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

local ContentPadding = Instance.new("UIPadding")
ContentPadding.Parent = ContentFrame
ContentPadding.PaddingTop = UDim.new(0, 10)
ContentPadding.PaddingBottom = UDim.new(0, 10)
ContentPadding.PaddingLeft = UDim.new(0, 10)
ContentPadding.PaddingRight = UDim.new(0, 10)

-- Button Creation Function
local function createButton(name, text, color, layoutOrder)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = ContentFrame
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 0, sizes.buttonHeight)
    button.Font = Enum.Font.GothamSemibold
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = sizes.fontSize
    button.LayoutOrder = layoutOrder
    button.ZIndex = 16
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.new(color.R * 1.2, color.G * 1.2, color.B * 1.2)),
        ColorSequenceKeypoint.new(1, color)
    }
    buttonGradient.Rotation = 90
    buttonGradient.Parent = button
    
    return button
end

-- Create Buttons
ESPButton = createButton("ESPButton", "üëÅÔ∏è ESP Enemy: OFF", Color3.fromRGB(220, 53, 69), 1)
AimButton = createButton("AimButton", "üéØ Auto Aim: OFF", Color3.fromRGB(138, 43, 226), 2)
SpeedButton = createButton("SpeedButton", "‚ö° Run Speed: OFF", Color3.fromRGB(0, 191, 255), 3)

-- Status Label
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = ContentFrame
StatusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
StatusLabel.BorderSizePixel = 0
StatusLabel.Size = UDim2.new(1, 0, 0, 25)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "üéÆ Ready for battle!"
StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
StatusLabel.TextSize = sizes.fontSize - 1
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.LayoutOrder = 4
StatusLabel.ZIndex = 15

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 8)
StatusCorner.Parent = StatusLabel

-- Minimized Frame
MinimizedFrame.Name = "MinimizedFrame"
MinimizedFrame.Parent = ScreenGui
MinimizedFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
MinimizedFrame.BorderSizePixel = 0
MinimizedFrame.Position = UDim2.new(0, 20, 0, 200)
MinimizedFrame.Size = UDim2.new(0, isMobile and 140 or 180, 0, isMobile and 40 or 45)
MinimizedFrame.Visible = false
MinimizedFrame.Active = true
MinimizedFrame.ZIndex = 20

local minFrameCorner = Instance.new("UICorner")
minFrameCorner.CornerRadius = UDim.new(0, 12)
minFrameCorner.Parent = MinimizedFrame

local minFrameGradient = Instance.new("UIGradient")
minFrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 40))
}
minFrameGradient.Rotation = 45
minFrameGradient.Parent = MinimizedFrame

local minFrameBorder = Instance.new("UIStroke")
minFrameBorder.Color = Color3.fromRGB(255, 200, 100)
minFrameBorder.Thickness = 2
minFrameBorder.Parent = MinimizedFrame

RestoreButton.Name = "RestoreButton"
RestoreButton.Parent = MinimizedFrame
RestoreButton.BackgroundTransparency = 1
RestoreButton.Size = UDim2.new(1, 0, 1, 0)
RestoreButton.Font = Enum.Font.GothamSemibold
RestoreButton.Text = "üç∞ Dessert War"
RestoreButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RestoreButton.TextSize = isMobile and 10 or 12
RestoreButton.ZIndex = 21

makeDraggable(MinimizedFrame)

-- Animation Functions
local function smoothMinimize()
    isMinimized = true
    
    local minimizeTween = TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    
    local shadowTween = TweenService:Create(MainShadow, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    
    minimizeTween:Play()
    shadowTween:Play()
    
    minimizeTween.Completed:Connect(function()
        MainFrame.Visible = false
        MainShadow.Visible = false
        MinimizedFrame.Visible = true
        
        MinimizedFrame.Size = UDim2.new(0, 0, 0, 0)
        local restoreTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, isMobile and 140 or 180, 0, isMobile and 40 or 45)
        })
        restoreTween:Play()
    end)
end

local function smoothRestore()
    isMinimized = false
    
    local hideTween = TweenService:Create(MinimizedFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 0, 0, 0)
    })
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MinimizedFrame.Visible = false
        MainFrame.Visible = true
        MainShadow.Visible = true
        
        MainFrame.Size = UDim2.new(0, 0, 0, 0)
        MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        MainShadow.Size = UDim2.new(0, 0, 0, 0)
        MainShadow.BackgroundTransparency = 1
        
        local restoreTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.width, 0, sizes.height),
            Position = UDim2.new(0, 30, 0, 120)
        })
        
        local shadowRestoreTween = TweenService:Create(MainShadow, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, sizes.width, 0, sizes.height),
            BackgroundTransparency = 0.7
        })
        
        restoreTween:Play()
        shadowRestoreTween:Play()
    end)
end

-- Helper Functions
local function updateStatus(text, color)
    StatusLabel.Text = text
    StatusLabel.TextColor3 = color or Color3.fromRGB(100, 255, 100)
end

local function safeCall(func, errorMsg)
    local success, result = pcall(func)
    if not success then
        warn("Error in " .. (errorMsg or "function") .. ": " .. tostring(result))
        updateStatus("‚ùå Error: " .. (errorMsg or "Unknown"), Color3.fromRGB(255, 100, 100))
        return false
    end
    return true
end

-- Enhanced Enemy Detection
local function isEnemy(player)
    if not player or player == LocalPlayer then
        return false
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return false
    end
    
    -- Advanced team detection logic
    local localTeam = LocalPlayer.Team
    local playerTeam = player.Team
    
    -- If no teams or different teams, consider as enemy
    if not localTeam or not playerTeam or localTeam ~= playerTeam then
        return true
    end
    
    return false
end

local function getPlayerDistance(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    return (localChar.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
end

-- Enhanced ESP System
local function createAdvancedESP(player)
    if not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    
    if not humanoidRootPart or not humanoid then return end
    
    -- Create ESP Box with better visibility
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "ESPBox"
    espBox.Parent = humanoidRootPart
    espBox.Size = Vector3.new(4, 6, 1)
    espBox.Color3 = Color3.fromRGB(255, 0, 0)
    espBox.Transparency = 0.6
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    
    -- Create ESP Highlight for better visibility
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESPHighlight"
    highlight.Parent = character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 0)
    highlight.FillTransparency = 0.8
    highlight.OutlineTransparency = 0.3
    highlight.Adornee = character
    
    -- Create ESP GUI with enhanced info
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "ESPGui"
    espGui.Parent = head or humanoidRootPart
    espGui.Size = UDim2.new(0, 200, 0, 80)
    espGui.StudsOffset = Vector3.new(0, 3, 0)
    espGui.AlwaysOnTop = true
    
    -- Player Name
    local nameText = Instance.new("TextLabel")
    nameText.Parent = espGui
    nameText.BackgroundTransparency = 1
    nameText.Size = UDim2.new(1, 0, 0.4, 0)
    nameText.Font = Enum.Font.GothamBold
    nameText.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameText.TextSize = 16
    nameText.TextStrokeTransparency = 0
    nameText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameText.Text = player.Name
    
    -- Distance Text
    local distanceText = Instance.new("TextLabel")
    distanceText.Parent = espGui
    distanceText.BackgroundTransparency = 1
    distanceText.Position = UDim2.new(0, 0, 0.4, 0)
    distanceText.Size = UDim2.new(1, 0, 0.3, 0)
    distanceText.Font = Enum.Font.Gotham
    distanceText.TextColor3 = Color3.fromRGB(255, 255, 0)
    distanceText.TextSize = 14
    distanceText.TextStrokeTransparency = 0
    distanceText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    
    -- Health Text
    local healthText = Instance.new("TextLabel")
    healthText.Parent = espGui
    healthText.BackgroundTransparency = 1
    healthText.Position = UDim2.new(0, 0, 0.7, 0)
    healthText.Size = UDim2.new(1, 0, 0.3, 0)
    healthText.Font = Enum.Font.Gotham
    healthText.TextColor3 = Color3.fromRGB(0, 255, 0)
    healthText.TextSize = 12
    healthText.TextStrokeTransparency = 0
    healthText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    
    -- Store ESP objects
    espObjects[player] = {
        box = espBox,
        highlight = highlight,
        gui = espGui,
        nameText = nameText,
        distanceText = distanceText,
        healthText = healthText
    }
    
    -- Update ESP info function
    local function updateESPInfo()
        if espObjects[player] and player.Character and humanoidRootPart.Parent then
            local distance = getPlayerDistance(player)
            local health = humanoid.Health
            local maxHealth = humanoid.MaxHealth
            
            -- Update distance
            distanceText.Text = math.floor(distance) .. "m"
            
            -- Update health
            healthText.Text = "HP: " .. math.floor(health) .. "/" .. math.floor(maxHealth)
            
            -- Color coding based on distance and health
            if distance < 50 then
                espBox.Color3 = Color3.fromRGB(255, 0, 0) -- Red - Very close
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
            elseif distance < 150 then
                espBox.Color3 = Color3.fromRGB(255, 165, 0) -- Orange - Close
                highlight.FillColor = Color3.fromRGB(255, 165, 0)
            else
                espBox.Color3 = Color3.fromRGB(255, 255, 0) -- Yellow - Far
                highlight.FillColor = Color3.fromRGB(255, 255, 0)
            end
            
            -- Health color coding
            local healthPercent = health / maxHealth
            if healthPercent > 0.7 then
                healthText.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green
            elseif healthPercent > 0.3 then
                healthText.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow
            else
                healthText.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red
            end
        end
    end
    
    -- Connect update function
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if espEnabled and espObjects[player] then
            updateESPInfo()
        else
            connection:Disconnect()
        end
    end)
end

local function removeESP(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        espObjects[player] = nil
    end
end

local function clearAllESP()
    for player, _ in pairs(espObjects) do
        removeESP(player)
    end
    espObjects = {}
end

-- Enhanced ESP Update with Long Range Detection
local function updateAdvancedESP()
    if not espEnabled then return end
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) then
            local distance = getPlayerDistance(player)
            
            -- Only create ESP if within max distance and doesn't already exist
            if distance <= maxESPDistance and not espObjects[player] then
                createAdvancedESP(player)
            elseif distance > maxESPDistance and espObjects[player] then
                removeESP(player)
            end
        elseif espObjects[player] then
            removeESP(player)
        end
    end
end

-- Enhanced Auto Aim System
local function getClosestEnemyInFOV()
    local closestPlayer = nil
    local closestDistance = maxAimDistance
    local closestAngle = math.huge
    
    local camera = Camera
    local cameraPosition = camera.CFrame.Position
    local cameraDirection = camera.CFrame.LookVector
    
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) and player.Character then
            local targetPart = player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                local distance = getPlayerDistance(player)
                local targetPosition = targetPart.Position
                local directionToTarget = (targetPosition - cameraPosition).Unit
                local angle = math.acos(cameraDirection:Dot(directionToTarget))
                
                -- Check if target is within FOV (60 degrees) and closer
                if angle < math.rad(60) and distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                    closestAngle = angle
                end
            end
        end
    end
    
    return closestPlayer
end

local function predictTargetPosition(target)
    if not target or not target.Character then
        return nil
    end
    
    local targetPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then
        return nil
    end
    
    local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return targetPart.Position
    end
    
    -- Simple velocity prediction
    local velocity = humanoidRootPart.Velocity
    local distance = getPlayerDistance(target)
    local timeToTarget = distance / 1000 -- Assume projectile speed of 1000 studs/second
    
    return targetPart.Position + (velocity * timeToTarget)
end

local function smartAimAtTarget(target)
    if not target or not target.Character then
        return
    end
    
    local predictedPosition = predictTargetPosition(target)
    if not predictedPosition then
        return
    end
    
    local localChar = LocalPlayer.Character
    if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    -- Calculate aim position with prediction
    local cameraPosition = Camera.CFrame.Position
    local direction = (predictedPosition - cameraPosition).Unit
    
    -- Smooth aiming with enhanced smoothness
    local currentCFrame = Camera.CFrame
    local targetCFrame = CFrame.lookAt(cameraPosition, predictedPosition)
    
    -- Dynamic smoothness based on distance
    local distance = getPlayerDistance(target)
    local dynamicSmoothness = math.min(aimSmoothness * (distance / 100), 0.5)
    
    -- Lerp for smooth aiming
    local newCFrame = currentCFrame:Lerp(targetCFrame, dynamicSmoothness)
    Camera.CFrame = newCFrame
end

local function startAdvancedAutoAim()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
    end
    
    aimUpdateConnection = RunService.Heartbeat:Connect(function()
        if autoAimEnabled then
            currentTarget = getClosestEnemyInFOV()
            if currentTarget then
                smartAimAtTarget(currentTarget)
            end
        end
    end)
end

local function stopAutoAim()
    if aimUpdateConnection then
        aimUpdateConnection:Disconnect()
        aimUpdateConnection = nil
    end
    currentTarget = nil
end

-- Run Speed System
local function startRunSpeed()
    if speedConnection then
        speedConnection:Disconnect()
    end
    
    speedConnection = RunService.Heartbeat:Connect(function()
        if runSpeedEnabled then
            local character = LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid and humanoid.WalkSpeed ~= runSpeed then
                    humanoid.WalkSpeed = runSpeed
                end
            end
        end
    end)
end

local function stopRunSpeed()
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = nil
    end
    
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
end

-- Button Setup Function
local function setupButton(button, callback)
    button.MouseButton1Click:Connect(callback)
    if isMobile then
        button.TouchTap:Connect(callback)
    end
    
    -- Enhanced hover effects
    if not isMobile then
        button.MouseEnter:Connect(function()
            local hoverTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                BackgroundColor3 = Color3.new(button.BackgroundColor3.R * 1.3, button.BackgroundColor3.G * 1.3, button.BackgroundColor3.B * 1.3),
                Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 2)
            })
            hoverTween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            local leaveTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                BackgroundColor3 = button.BackgroundColor3,
                Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 2)
            })
            leaveTween:Play()
        end)
    end
end

-- Button Events
setupButton(MinimizeButton, smoothMinimize)
setupButton(RestoreButton, smoothRestore)

setupButton(CloseButton, function()
    local closeTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    closeTween:Play()
    
    closeTween.Completed:Connect(function()
        -- Cleanup
        clearAllESP()
        stopAutoAim()
        stopRunSpeed()
        ScreenGui:Destroy()
    end)
end)

setupButton(ESPButton, function()
    espEnabled = not espEnabled
    
    if espEnabled then
        ESPButton.Text = "üëÅÔ∏è ESP Enemy: ON"
        ESPButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        updateStatus("üëÅÔ∏è Advanced ESP activated!", Color3.fromRGB(100, 255, 100))
        
        -- Start ESP updates
        if espUpdateConnection then
            espUpdateConnection:Disconnect()
        end
        espUpdateConnection = RunService.Heartbeat:Connect(updateAdvancedESP)
        
        -- Initial ESP creation
        updateAdvancedESP()
    else
        ESPButton.Text = "üëÅÔ∏è ESP Enemy: OFF"
        ESPButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
        updateStatus("üëÅÔ∏è ESP deactivated", Color3.fromRGB(255, 255, 100))
        
        -- Stop ESP updates and clear
        if espUpdateConnection then
            espUpdateConnection:Disconnect()
            espUpdateConnection = nil
        end
        clearAllESP()
    end
end)

setupButton(AimButton, function()
    autoAimEnabled = not autoAimEnabled
    
    if autoAimEnabled then
        AimButton.Text = "üéØ Auto Aim: ON"
        AimButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        updateStatus("üéØ Smart auto aim activated!", Color3.fromRGB(100, 255, 100))
        startAdvancedAutoAim()
    else
        AimButton.Text = "üéØ Auto Aim: OFF"
        AimButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        updateStatus("üéØ Auto aim deactivated", Color3.fromRGB(255, 255, 100))
        stopAutoAim()
    end
end)

setupButton(SpeedButton, function()
    runSpeedEnabled = not runSpeedEnabled
    
    if runSpeedEnabled then
        SpeedButton.Text = "‚ö° Run Speed: ON"
        SpeedButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        updateStatus("‚ö° Run speed boost activated!", Color3.fromRGB(100, 255, 100))
        startRunSpeed()
    else
        SpeedButton.Text = "‚ö° Run Speed: OFF"
        SpeedButton.BackgroundColor3 = Color3.fromRGB(0, 191, 255)
        updateStatus("‚ö° Run speed normalized", Color3.fromRGB(255, 255, 100))
        stopRunSpeed()
    end
end)

-- Player Events
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        wait(2) -- Wait for character to load
        updateAdvancedESP()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function()
    wait(3) -- Wait for character to fully load
    
    -- Get original walk speed
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            originalWalkSpeed = humanoid.WalkSpeed
        end
    end
    
    -- Reapply speed boost if enabled
    if runSpeedEnabled then
        startRunSpeed()
    end
    
    -- Update ESP
    if espEnabled then
        updateAdvancedESP()
    end
end)

-- Keyboard shortcuts (PC only)
if not isMobile then
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == Enum.KeyCode.E then
            ESPButton.MouseButton1Click()
        elseif input.KeyCode == Enum.KeyCode.T then
            AimButton.MouseButton1Click()
        elseif input.KeyCode == Enum.KeyCode.R then
            SpeedButton.MouseButton1Click()
        elseif input.KeyCode == Enum.KeyCode.H then
            if isMinimized then
                smoothRestore()
            else
                smoothMinimize()
            end
        end
    end)
end

-- Cleanup on GUI destruction
ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui.Parent then
        clearAllESP()
        stopAutoAim()
        stopRunSpeed()
        if espUpdateConnection then
            espUpdateConnection:Disconnect()
        end
        if aimUpdateConnection then
            aimUpdateConnection:Disconnect()
        end
        if speedConnection then
            speedConnection:Disconnect()
        end
    end
end)

-- Initialize
spawn(function()
    wait(2)
    updateStatus("üç∞ Enhanced Dessert War loaded!", Color3.fromRGB(255, 200, 100))
    wait(3)
    updateStatus("üéÆ Ready for enhanced battle!", Color3.fromRGB(100, 255, 100))
end)

print("üç∞ DESSERT WAR ENHANCED SCRIPT v2.0 LOADED!")
print("=" .. string.rep("=", 50))
print("‚ú® ENHANCED FEATURES:")
print("   üëÅÔ∏è Advanced ESP with Long Range Detection")
print("   üéØ Smart Auto Aim with Prediction")
print("   ‚ö° Run Speed Boost System")
print("   üñ±Ô∏è Draggable & Minimizable GUI")
print("   üì± Full Mobile & PC Support")
print("   üé® Professional UI Design")
print("")
print("üéØ ESP FEATURES:")
print("   ‚Ä¢ Long range enemy detection (2000+ studs)")
print("   ‚Ä¢ Player names and health display")
print("   ‚Ä¢ Distance measurement")
print("   ‚Ä¢ Color-coded threat levels")
print("   ‚Ä¢ Highlight system for better visibility")
print("")
print("üéØ AUTO AIM FEATURES:")
print("   ‚Ä¢ FOV-based targeting")
print("   ‚Ä¢ Movement prediction")
print("   ‚Ä¢ Dynamic smoothness")
print("   ‚Ä¢ Smart target selection")
print("")
if isMobile then
    print("üì± MOBILE CONTROLS:")
    print("   üëÅÔ∏è Tap ESP button to toggle")
    print("   üéØ Tap Aim button to toggle")
    print("   ‚ö° Tap Speed button to toggle")
    print("   üì± Drag GUI to move")
    print("   ‚àí Tap minimize button")
else
    print("‚å®Ô∏è KEYBOARD SHORTCUTS:")
    print("   E - Toggle ESP")
    print("   T - Toggle Auto Aim")
    print("   R - Toggle Run Speed")
    print("   H - Minimize/Restore GUI")
end
print("")
print("üöÄ READY TO DOMINATE DESSERT WAR!")
print("=" .. string.rep("=", 50))
